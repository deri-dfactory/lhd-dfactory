{"version":3,"sources":["hooks/useDeriConfig.js","desktop/pages/trade/Lite/Lite.js"],"names":["useDeriConfig","wallet","useState","deriConfig","setDeriConfig","loadConfig","a","getContractAddressConfig","DeriEnv","get","configs","account","filtered","filter","config","chainId","useEffect","inject","observer","indexPrice","curTab","setCurTab","spec","setSpec","specs","detail","switchTab","current","document","querySelector","style","minWidth","tradeBodyClass","classNames","symbol","start","length","props","onSpecChange","pause","className","onClick"],"mappings":"iNAIe,SAASA,EAAcC,GAAQ,IAAD,EACRC,mBAAS,IADD,mBACpCC,EADoC,KACxBC,EADwB,KAGrCC,EAAU,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,sEACKC,YAAyBC,IAAQC,OADtC,OACXC,EADW,OAEdT,EAAOU,SACFC,EAAWF,EAAQG,QAAO,SAAAC,GAAM,OAAMA,EAAOC,WAAed,EAAOc,WACzEX,EAAcQ,IAEdR,EAAcM,GANC,2CAAH,sDAehB,OALAM,qBAAU,WAER,OADAX,EAAWJ,GACJ,eACN,CAACA,EAAOU,UAEJR,I,gKCkDMc,sBAAO,SAAS,aAAhBA,CAA8BC,aA9D7C,YAAmC,IAApBjB,EAAmB,EAAnBA,OAAOkB,EAAY,EAAZA,WAAY,EACJjB,mBAAS,QADL,mBACzBkB,EADyB,KACjBC,EADiB,OAERnB,mBAAS,IAFD,mBAEzBoB,EAFyB,KAEnBC,EAFmB,KAG1BC,EAAQxB,YAAcC,EAAOwB,QAI7BC,EAAY,SAAAC,GAChBN,EAAUM,GAERC,SAASC,cAAc,YAAYC,MAAMC,SAD5B,QAAZJ,EACmD,SAEA,WASlDK,EAAgBC,IAAW,aAAcb,GAG/CJ,qBAAU,WAIR,OAHGM,EAAKY,QACNf,EAAWgB,MAAMb,EAAKY,QAEjB,eAEN,CAACZ,EAAKY,SAGTlB,qBAAU,WAKR,OAJGQ,EAAMY,OAAS,IAChBb,EAAQC,EAAM,IACdL,EAAWgB,MAAMX,EAAM,GAAGU,SAErB,eAGN,CAACV,IAEJ,IAAMa,EAAQ,CACZpC,SACAuB,QACAF,OACAgB,aA/BmB,SAAAhB,GACnBH,EAAWoB,QACXhB,EAAQD,IA8BRH,cAGF,OACE,sBAAKqB,UAAWR,EAAhB,UACE,sBAAKQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAOC,QAAS,kBAAMf,EAAU,SAA/C,kBACA,qBAAKc,UAAU,MAAMC,QAAS,kBAAMf,EAAU,QAA9C,qBAGU,SAAXN,EAAoB,cAAC,IAAD,eAAeiB,IAAW,cAAC,UAAD,eAAcA","file":"static/js/12.3fd7f2ed.chunk.js","sourcesContent":["import { useState,useEffect } from 'react'\nimport { getContractAddressConfig } from '../lib/web3js';\nimport {DeriEnv} from '../lib/web3js/index'\n\nexport default function useDeriConfig(wallet){\n  const [deriConfig, setDeriConfig]= useState([]);\n\n  const loadConfig = async (wallet) => {\n    const configs = await getContractAddressConfig(DeriEnv.get())\n    if(wallet.account){\n      const filtered = configs.filter(config => (+config.chainId) === (+wallet.chainId))\n      setDeriConfig(filtered);\n    } else {\n      setDeriConfig(configs)\n    }\n  }\n\n  useEffect(() => {\n    loadConfig(wallet);\n    return () => {}\n  }, [wallet.account]);\n\n  return deriConfig;\n}","import { useState ,useEffect} from 'react'\nimport ProTrade from '../Pro/Pro';\nimport useDeriConfig from '../../../../hooks/useDeriConfig';\nimport classNames from 'classnames';\nimport {observer, inject } from 'mobx-react';\nimport './lite.less'\nimport LiteTrade from '../../../../components/Trade/LiteTrade';\n\n\n\nfunction Lite({wallet,indexPrice}){\n  const [curTab, setCurTab] = useState('lite')\n  const [spec, setSpec] = useState({});\n  const specs = useDeriConfig(wallet.detail)\n\n\n\n  const switchTab = current => {\n    setCurTab(current)\n    if(current === 'pro') {\n      document.querySelector('.desktop').style.minWidth = '1920px';\n    } else {\n      document.querySelector('.desktop').style.minWidth = 'inherit';\n    }\n  }\n\n  const onSpecChange = spec => {\n    indexPrice.pause();\n    setSpec(spec)\n  }\n\n  const tradeBodyClass =classNames('trade-body', curTab)\n\n\n  useEffect(() => {\n    if(spec.symbol){\n      indexPrice.start(spec.symbol)\n    }\n    return () => {\n    };\n  }, [spec.symbol]);\n\n\n  useEffect(() => {\n    if(specs.length > 0){\n      setSpec(specs[0]);   \n      indexPrice.start(specs[0].symbol)   \n    }\n    return () => {\n\n    };\n  }, [specs]);\n\n  const props = {\n    wallet,\n    specs,\n    spec ,\n    onSpecChange,\n    indexPrice\n  }\n\n  return (\n    <div className={tradeBodyClass}>\n      <div className=\"check-lite-pro\">\n        <div className='lite' onClick={() => switchTab('lite')}>LITE</div>\n        <div className='pro' onClick={() => switchTab('pro')}> PRO\n        </div>\n      </div>\n      {curTab === 'lite' ? <LiteTrade {...props}/> : <ProTrade {...props}/>}\n    </div>\n  )\n}\nexport default inject('wallet','indexPrice')(observer(Lite))"],"sourceRoot":""}