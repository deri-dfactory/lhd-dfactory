{"version":3,"sources":["hooks/useDeriConfig.js","mobile/pages/trade/Trade.js"],"names":["useDeriConfig","wallet","useState","deriConfig","setDeriConfig","loadConfig","a","getContractAddressConfig","DeriEnv","get","configs","account","filtered","filter","config","chainId","useEffect","inject","observer","indexPrice","spec","setSpec","specs","detail","symbol","start","length","props","onSpecChange","pause","className"],"mappings":"iNAIe,SAASA,EAAcC,GAAQ,IAAD,EACRC,mBAAS,IADD,mBACpCC,EADoC,KACxBC,EADwB,KAGrCC,EAAU,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,sEACKC,YAAyBC,IAAQC,OADtC,OACXC,EADW,OAEdT,EAAOU,SACFC,EAAWF,EAAQG,QAAO,SAAAC,GAAM,OAAMA,EAAOC,WAAed,EAAOc,WACzEX,EAAcQ,IAEdR,EAAcM,GANC,2CAAH,sDAehB,OALAM,qBAAU,WAER,OADAX,EAAWJ,GACJ,eACN,CAACA,EAAOU,UAEJR,I,8JCZYW,EAAON,IAAQC,OAAf,OA+CNQ,sBAAO,SAAS,aAAhBA,CAA8BC,aA7C7C,YAAoC,IAApBjB,EAAmB,EAAnBA,OAAOkB,EAAY,EAAZA,WAAY,EACTjB,mBAAS,IADA,mBAC1BkB,EAD0B,KACpBC,EADoB,KAE3BC,EAAQtB,YAAcC,EAAOsB,QAUnCP,qBAAU,WAIR,OAHGI,EAAKI,QACNL,EAAWM,MAAML,EAAKI,QAEjB,eAEN,CAACJ,EAAKI,SAGTR,qBAAU,WAKR,OAJGM,EAAMI,OAAS,IAChBL,EAAQC,EAAM,IACdH,EAAWM,MAAMH,EAAM,GAAGE,SAErB,eAGN,CAACF,IAEJ,IAAMK,EAAQ,CACZ1B,SACAqB,QACAF,OACAQ,aA9BmB,SAAAR,GACnBD,EAAWU,QACXR,EAAQD,IA6BRD,cAEF,OACE,qBAAKW,UAAU,aAAf,SACE,cAAC,IAAD,eAAeH","file":"static/js/13.b6d1719a.chunk.js","sourcesContent":["import { useState,useEffect } from 'react'\nimport { getContractAddressConfig } from '../lib/web3js';\nimport {DeriEnv} from '../lib/web3js/index'\n\nexport default function useDeriConfig(wallet){\n  const [deriConfig, setDeriConfig]= useState([]);\n\n  const loadConfig = async (wallet) => {\n    const configs = await getContractAddressConfig(DeriEnv.get())\n    if(wallet.account){\n      const filtered = configs.filter(config => (+config.chainId) === (+wallet.chainId))\n      setDeriConfig(filtered);\n    } else {\n      setDeriConfig(configs)\n    }\n  }\n\n  useEffect(() => {\n    loadConfig(wallet);\n    return () => {}\n  }, [wallet.account]);\n\n  return deriConfig;\n}","\nimport { useState ,useEffect,useCallback} from 'react'\nimport config from '../../../config.json'\nimport axios from 'axios'\nimport { DeriEnv, deriToNatural } from '../../../lib/web3js';\nimport LiteTrade from \"../../../components/Trade/LiteTrade\";\nimport './trade.less'\nimport { inject, observer } from 'mobx-react';\nimport useDeriConfig from '../../../hooks/useDeriConfig.js';\n\nconst oracleConfig = config[DeriEnv.get()]['oracle']\n\nfunction Trade({wallet,indexPrice}){\n  const [spec, setSpec] = useState({});  \n  const specs = useDeriConfig(wallet.detail)\n\n\n  const onSpecChange = spec => {\n    indexPrice.pause();\n    setSpec(spec)\n  }\n\n\n \n  useEffect(() => {\n    if(spec.symbol){\n      indexPrice.start(spec.symbol)\n    }\n    return () => {\n    };\n  }, [spec.symbol]);\n\n\n  useEffect(() => {\n    if(specs.length > 0){\n      setSpec(specs[0]);   \n      indexPrice.start(specs[0].symbol)   \n    }\n    return () => {\n\n    };\n  }, [specs]);\n\n  const props = {\n    wallet,\n    specs,\n    spec ,\n    onSpecChange,\n    indexPrice\n  }\n  return (\n    <div className='trade-body'>\n      <LiteTrade {...props}/>  \n    </div>    \n  )\n}\n\nexport default inject('wallet','indexPrice')(observer(Trade))"],"sourceRoot":""}