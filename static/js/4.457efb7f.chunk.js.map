{"version":3,"sources":["hooks/useDeriConfig.js","components/Trade/Dialog/DepositMargin.js","components/Trade/Position.js","components/Trade/Dialog/WithdrawMargin.js","components/Trade/History.js","components/Trade/Trade.js","components/Trade/Dialog/TradeConfirm.js","components/Trade/LiteTrade.js"],"names":["useDeriConfig","wallet","useState","deriConfig","setDeriConfig","loadConfig","a","getContractAddressConfig","DeriEnv","get","configs","account","filtered","filter","config","chainId","useEffect","DepositMargin","spec","onClose","afterDeposit","walletBalance","setWalletBalance","addMarginSub","setAddMarginSub","amount","setAmount","loadWalletBalance","isConnected","getWalletBalance","detail","pool","balance","formatBalance","toFixed","substring","indexOf","length","deposit","depositMargin","res","success","msg","error","errorMessage","message","alert","className","data-dismiss","onClick","value","displayType","decimalScale","style","fontSize","marginLeft","marginTop","bTokenSymbol","display","type","placeholder","onChange","event","target","Button","btnText","click","DepositDialog","withModal","WithDrawDialog","afterWithdraw","decimal","setDecimal","getPositionInfo","positionInfo","margin","unrealizedPnl","withdraw","withdrawMargin","id","thousandSeparator","baseToken","v-show","Position","isLiquidation","setIsLiquidation","position","setPosition","direction","setDirection","balanceContract","setBalanceContract","addModalIsOpen","setAddModalIsOpen","removeModalIsOpen","setRemoveModalIsOpen","loadPositionInfo","volume","useInterval","onClosePosition","closePosition","finally","directionClass","role","aria-hidden","t","viewBox","version","xmlns","p-id","width","height","d","fill","averageEntryPrice","transform","data-name","marginHeld","liquidationPrice","modalIsOpen","History","specs","history","setHistory","loadHistory","getTradeHistory","all","his","map","item","directionText","find","s","baseTokenText","symbol","index","dateFormat","asString","Date","parseInt","time","price","notional","transactionFee","Trade","onSpecChange","indexPrice","contractInfo","setContractInfo","dropdown","setDropdown","setMargin","fundingRate","setFundingRate","fundingRateTip","setFundingRateTip","fundingRateAfter","setFundingRateAfter","transFee","setTransFee","poolLiquidity","setPoolLiquidity","liqUsedPair","setLiqUsedPair","indexPriceClass","setIndexPriceClass","indexPriceRef","useRef","tradeInfo","setTradeInfo","setVolume","loadPosition","directionClazz","classNames","selectClass","volumeClazz","hasSpec","hasConnectWallet","directionChange","onDropdown","stopPropagation","loadFundingRate","getFundingRate","fundingRate0","tip","fundingRatePerBlock","liquidity","loadContractInfo","getSpecification","loadTransactionFee","getEstimatedFee","Math","abs","calcLiquidityUsed","getLiquidityUsed","curLiqUsed","getEstimatedLiquidityUsed","afterLiqUsed","liquidityUsed0","liquidityUsed1","calcFundingRateAfter","getEstimatedFundingRate","fundingRate1","initialzie","address","priceCache","clear","update","PerpetualPoolParametersCache","refreshCache","bodyClickListener","document","body","addEventListener","removeEventListener","currentPosition","contractValue","multiplier","dynamicBalance","minInitialMarginRatio","leverage","available","converted","calcTradeInfo","current","isNaN","number","floor","cloned","e","select","selected","onSelect","title","onFocus","setAttribute","onBlur","onKeyUp","test","disabled","allowNegative","prefix","suffix","unit","Slider","max","onValueChange","start","Operator","afterTrade","ConfirmDialog","trade","tradeWithMargin","afterTradePosition","v-if","isApprove","setIsApprove","noBalance","setNoBalance","emptyVolume","setEmptyVolume","setModalIsOpen","loadApprove","isUnlocked","catch","console","log","result","actionElement","undefined","unlock","connect","LiteTrade","isPro","curTab","setCurTab","switchTab","tradeClassName","ContractInfo"],"mappings":"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","file":"static/js/4.457efb7f.chunk.js","sourcesContent":["import { useState,useEffect } from 'react'\nimport { getContractAddressConfig } from '../lib/web3js';\nimport {DeriEnv} from '../lib/web3js/index'\n\nexport default function useDeriConfig(wallet){\n  const [deriConfig, setDeriConfig]= useState([]);\n\n  const loadConfig = async (wallet) => {\n    const configs = await getContractAddressConfig(DeriEnv.get())\n    if(wallet.account){\n      const filtered = configs.filter(config => (+config.chainId) === (+wallet.chainId))\n      setDeriConfig(filtered);\n    } else {\n      setDeriConfig(configs)\n    }\n  }\n\n  useEffect(() => {\n    loadConfig(wallet);\n    return () => {}\n  }, [wallet.account]);\n\n  return deriConfig;\n}","import React, { useState ,useEffect} from 'react'\nimport {  getWalletBalance, depositMargin } from \"../../../lib/web3js\";\nimport NumberFormat from 'react-number-format';\nimport Button from '../../Button/Button';\n\nexport default function DepositMargin({wallet,spec = {},onClose,afterDeposit}){\n  const [walletBalance, setWalletBalance] = useState('');\n  const [addMarginSub, setAddMarginSub] = useState('');\n  const [amount,setAmount] = useState('');\n\n  const loadWalletBalance = async () => {\n    if(wallet.isConnected()){\n      const balance = await getWalletBalance(wallet.detail.chainId,spec.pool,wallet.detail.account)\n      if(balance){\n        const formatBalance = (+balance).toFixed(2)\n        const addMarginSub = formatBalance.substring(formatBalance.indexOf('.'),formatBalance.length)\n        setWalletBalance(balance);\n        setAddMarginSub(addMarginSub)\n      }\n    }\n  }\n\n  const onChange = event => {\n    const {value} = event.target\n    setAmount(value)\n  }\n\n  const addAll = () => {\n    setAmount(walletBalance)\n  }\n\n  const deposit = async (amount) => {\n    const res = await depositMargin(wallet.detail.chainId,spec.pool,wallet.detail.account,amount);\n    if(res.success){\n      afterDeposit();\n      onClose();\n    } else {\n      const msg = typeof res.error === 'string' ? res.error : res.error.errorMessage || res.error.message\n      alert(msg)\n    }\n  }\n\n  useEffect(() => {\n    loadWalletBalance()\n    return () => {\n    };\n  }, [wallet.detail]);\n\n\n\n  return (\n    <div className='modal fade'>\n      <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>DEPOSIT MARGIN</div>\n            <div className='close' data-dismiss='modal' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>\n            <div className='margin-box-info'>\n              <div>Wallet Balance</div>\n              <div className='money'>\n                <span>\n                  <span className='bt-balance'>\n                    <NumberFormat value={ walletBalance } displayType = 'text' decimalScale={0}/>.<span style={{fontSize:'12px'}}>{addMarginSub}</span> \n                  </span> \n                  <br/>\n                  <span \n                  style={{fontSize :'14px',marginLeft: '10px',marginTop: '10px'}}>\n                    {spec.bTokenSymbol}\n                  </span>\n                  </span\n                >\n                <span className='add'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : amount !=='' ? 'block' : 'none'}}>AMOUNT</div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='Amount'\n                      value={amount}\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div>{ spec.bTokenSymbol }</div>\n              </div>\n              <div className='max'>\n                MAX: <span className='max-num'>{ walletBalance }</span>\n                <span className='max-btn-left' onClick={addAll} >ADD ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button\n                  className='margin-btn'\n                  btnText='DEPOSIT'\n                  click={() => deposit(amount)}\n                />                  \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format';\nimport { getPositionInfo, closePosition } from \"../../lib/web3js\";\nimport className from 'classnames'\nimport withModal from '../hoc/withModal';\nimport DepositMargin from './Dialog/DepositMargin';\nimport WithdrawMagin from './Dialog/WithdrawMargin';\nimport useInterval from '../../hooks/useInterval';\n\n\n\nconst DepositDialog = withModal(DepositMargin);\nconst WithDrawDialog = withModal(WithdrawMagin)\n\nexport default function Position({wallet,spec = {}}){\n  const [isLiquidation, setIsLiquidation] = useState(false);\n  const [position, setPosition] = useState({});\n  const [direction, setDirection] = useState('');\n  const [balanceContract, setBalanceContract] = useState('');\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n  const [removeModalIsOpen, setRemoveModalIsOpen] = useState(false);\n  useInterval(loadPositionInfo,3000)\n\n  async function loadPositionInfo() { \n    if(wallet.isConnected() && spec && spec.pool){\n      const positionInfo = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account)\n      if(positionInfo){\n        setPosition(positionInfo);\n        const direction = (+positionInfo.volume) > 0 ? 'LONG' : (positionInfo.volume == 0 ? '--' : 'SHORT') \n        setDirection(direction)      \n        setBalanceContract((+positionInfo.margin) + (+positionInfo.unrealizedPnl))\n      }\n    }    \n  }\n\n  //平仓\n  const onClosePosition = async () => {\n    setIsLiquidation(true)\n    const res = await closePosition(wallet.detail.chainId,spec.pool,wallet.detail.account).finally(() => setIsLiquidation(false))\n    if(res.success){\n      loadPositionInfo();\n    } else {      \n      if(typeof res.error === 'string') {\n        alert(res.error)\n      } else if(typeof res.error === 'object'){\n        alert(res.error.errorMessage)\n      } else {\n        alert('Liquidation failed')\n      }\n      \n    }\n  }\n\n  const afterDeposit = () => {\n    setAddModalIsOpen(false)\n    loadPositionInfo();\n  }\n\n  const onCloseDeposit = () => {\n    setAddModalIsOpen(false)\n  }\n\n  const afterWithdraw = () => {\n    setRemoveModalIsOpen(false)\n    loadPositionInfo();\n  }\n\n  const onCloseWithdraw = () => {\n    setRemoveModalIsOpen(false)\n  }\n\n  const directionClass = className('Direction','info-num',{\n    'LONG' : direction === 'LONG',\n    'SHORT' : direction === 'SHORT'\n  })\n\n\n\n  useEffect(() => {\n    loadPositionInfo();\n    return () => {\n    };\n  }, [wallet.detail.account,spec.pool]);\n\n   \n  \n  return(\n\n    <div className='position-info'>\n    <div className='info'>\n      <div className='info-left'>\n        <div className='title-text'>Position</div>\n        <div className='info-num'>{ position.volume}</div>\n      </div>\n      <div className='info-right'>\n        <div\n          className='close-position'\n          id='close-p'\n          onClick={onClosePosition}\n        >\n          <span\n            className='spinner spinner-border spinner-border-sm'\n            role='status'\n            aria-hidden='true'\n            style={{display: isLiquidation ? 'block' : 'none'}}\n          ></span>\n          <svg t='1618369709897' className='icon' viewBox='0 0 1024 1024' version='1.1' xmlns='http://www.w3.org/2000/svg' p-id='2009' width='14' height='14'><path d='M510.8096 420.3008l335.296-335.296 90.5088 90.5088-335.296 335.296 335.296 335.296-90.5088 90.5088-335.296-335.296-335.296 335.296-90.5088-90.5088 335.296-335.296-335.296-335.296 90.5088-90.5088z' p-id='2010' fill='#ffffff'></path></svg> Close\n        </div>\n      </div>\n    </div>\n    <div className='info'>\n      <div className='info-left'>\n        <div className='title-text'>Average Entry Price</div>\n        <div className='info-num'><NumberFormat value={ position.averageEntryPrice } decimalScale={2} displayType='text'/></div>\n      </div>\n      <div className='info-right'></div>\n    </div>\n    <div className='info'>\n      <div className='info-left'>\n        <div className='title-text balance-con'>\n          Balance in Contract\n          (Dynamic Balance)\n        </div>\n        <div className='info-num'> <NumberFormat decimalScale = {2} value={ balanceContract} displayType='text' /></div>\n      </div>\n      <div className='info-right'>\n        <div\n          className='add-margin'\n          id='openAddMargin'\n          onClick={() => setAddModalIsOpen(true)}\n        >\n          <svg\n            className='svg'\n            xmlns='http://www.w3.org/2000/svg'\n            width='18'\n            height='18'\n            viewBox='0 0 18 18'\n          >\n            <path\n              id='login'\n              d='M13,9,7,4V7H0v4H7v3Zm3,7H8v2h8a2.006,2.006,0,0,0,2-2V2a2.006,2.006,0,0,0-2-2H8V2h8Z'\n              transform='translate(18) rotate(90)'\n              fill='#3ebf38'\n            />\n          </svg>\n          Add\n        </div>\n        <div\n          className='remove-margin'\n          onClick={() => setRemoveModalIsOpen(true)}\n        >\n          <svg\n            className='svg'\n            xmlns='http://www.w3.org/2000/svg'\n            width='18'\n            height='18'\n            viewBox='0 0 18 18'\n          >\n            <path\n              id='log-out'\n              data-name='log out'\n              d='M18,9,12,4V7H5v4h7v3ZM2,2h8V0H2A2.006,2.006,0,0,0,0,2V16a2.006,2.006,0,0,0,2,2h8V16H2Z'\n              transform='translate(0 18) rotate(-90)'\n              fill='#e35061'\n            />\n          </svg>\n          Remove\n        </div>\n      </div>\n    </div>\n    <div className='info'>\n      <div className='info-left'>\n        <div className='title-text'>Direction</div>\n        <div className={directionClass} >{direction}</div>\n      </div>\n      <div className='info-right'></div>\n    </div>\n    <div className='info'>\n      <div className='info-left'>\n        <div className='title-text'>Margin</div>\n        <div className='info-num'><NumberFormat value={ position.marginHeld } displayType='text' decimalScale={2}/></div>\n      </div>\n      <div className='info-right'></div>\n    </div>\n    <div className='info'>\n      <div className='info-left'>\n        <div className='title-text'>Unrealized PnL</div>\n        <div className='info-num'><NumberFormat value={ position.unrealizedPnl } displayType='text' decimalScale={8}/></div>\n      </div>\n      <div className='info-right'></div>\n    </div>\n    <div className='info'>\n      <div className='info-left'>\n        <div className='title-text'>Liquidation Price</div>\n        <div className='info-num'><NumberFormat decimalScale = {2} value={position.liquidationPrice} displayType='text'/></div>\n      </div>\n      <div className='info-right'></div>\n    </div>\n    <DepositDialog\n       wallet={wallet}\n       modalIsOpen={addModalIsOpen} \n       onClose={onCloseDeposit}\n       spec={spec}\n       afterDeposit={afterDeposit}\n    />\n    <WithDrawDialog\n      wallet={wallet}\n      modalIsOpen={removeModalIsOpen} \n      onClose={onCloseWithdraw}\n      spec={spec}\n      afterWithdraw={afterWithdraw}\n      />\n  </div>\n  )\n}","import React, { useState ,useEffect} from 'react'\nimport { withdrawMargin, getPositionInfo } from \"../../../lib/web3js\";\nimport NumberFormat from 'react-number-format';\nimport Button from '../../Button/Button';\n\nexport default function WithdrawMagin({wallet,spec = {},onClose,afterWithdraw}){\n  const [walletBalance, setWalletBalance] = useState('');\n  const [decimal, setDecimal] = useState('');\n  const [amount,setAmount] = useState('');\n\n  const loadWalletBalance = async () => {\n    if(wallet.isConnected()){\n      const positionInfo = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account);\n      if(positionInfo){\n        const balance = (+positionInfo.margin)  + (+positionInfo.unrealizedPnl) + ''       \n        const decimal = balance.substring(balance.indexOf('.'),balance.indexOf('.') +3)\n        setWalletBalance(balance);\n        setDecimal(decimal);\n      }\n    }\n  }\n\n  const removeAll = () => {\n    setAmount(walletBalance)\n  }\n\n  const onChange = event => {\n    const {value} =event.target\n    setAmount(value)\n  }\n\n  const withdraw = async () => {\n    const res = await withdrawMargin(wallet.detail.chainId,spec.pool,wallet.detail.account,amount);\n    if(res.success){\n      afterWithdraw();\n    } else {\n      const msg = typeof res.error === 'string' ? res.error : res.error.errorMessage || res.error.message\n      alert(msg)\n    }\n  }\n\n  useEffect(() => {\n    loadWalletBalance();\n    return () => {\n    };\n  }, [wallet.detail.account]);\n\n  return (\n    <div\n      className='modal fade'\n      id='removeMargin'\n    >\n      <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>WITHDRAW MARGIN</div>\n            <div className='close' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>\n            <div className='margin-box-info'>\n              <div>Available Balance</div>\n              <div className='money'>\n                <span>\n                  <span className='bt-balance'>\n                    <NumberFormat value={ walletBalance } thousandSeparator ={false} displayType = 'text' decimalScale={0}/>.<span style={{fontSize:'12px'}}>{decimal}</span>                     \n                  </span>\n                  </span>\n                <span className='remove'></span>\n              </div>\n              <div className='enter-margin remv'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : amount !=='' ? 'block' : 'none'}}>AMOUNT</div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      value={amount}\n                      onChange={onChange}\n                      placeholder='Amount'/>\n                  </div>\n                </div>\n                <div>{ spec.baseToken }</div>\n              </div>\n              <div className='max' v-show='isPosition'>\n                MAX: <span className='max-num'>{ walletBalance }</span>\n                <span className='max-btn-left' onClick={removeAll}>REMOVE ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button className='margin-btn' btnText='WITHDRAW' click={withdraw}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState ,useEffect} from 'react'\nimport { getTradeHistory } from \"../../lib/web3js\";\nimport dateFormat from 'date-format'\nimport NumberFormat from 'react-number-format';\nimport useInterval from '../../hooks/useInterval';\n\nexport default function History({wallet = {},spec ={} ,specs = []}){\n  const [history, setHistory] = useState([]);\n\n  const loadHistory =  async () => {\n    const all = await getTradeHistory(wallet.detail.chainId,spec.pool,wallet.detail.account)\n    const his = all.map(item => {\n      item.directionText = item.direction === 'LONG' ? 'LONG / BUY' : 'SHORT / SELL'\n      const find = specs.find(s => s.bTokenSymbol === item.baseToken)\n      if(find){\n        item.baseTokenText = ` ${find.symbol} / ${find.bTokenSymbol}`\n      }\n      return item;\n    })\n    setHistory(his)\n  }\n\n  // useInterval(loadHistory,3000)\n  useEffect(() => {\n    loadHistory();\n    return () => {      \n    };\n  }, [wallet.detail,spec.pool,specs]);\n  \n  return (\n    <div className='history-info' v-show='historyShow'>\n      {history.map((his,index) => {\n        return (\n          <div className='history-box' key={index}>\n          <div className='direction-bToken-price'>\n            <span>\n              <span className={`${his.direction}`}>{ his.directionText }</span>\n              <span>{ his.baseTokenText }</span>\n            </span>\n            <span className='history-text time'>{dateFormat.asString('yyyy-MM-dd hh:mm:ss',new Date(parseInt(his.time)))}</span>\n          </div>\n          <div className='time-price-volume'>\n            <div className='history-price'>\n              <div className='history-title'>Volume @ Price</div>\n              <div className='history-text'>{ his.volume } @ <NumberFormat value={ his.price } decimalScale={2} displayType='text'/></div>\n            </div>\n          <div className='notional'>\n              <div className='history-title'>Notional</div>\n              <div className='history-text'>{ his.notional }</div>\n            </div>\n            <div className='history-fee'>\n              <div className='history-title'>Transaction Fee</div>\n              <div className='history-text'>{ his.transactionFee }</div>\n            </div>\n          </div>        \n        </div>\n        )\n      })}\n    </div>\n  )\n}","import { useState,useEffect,useRef } from 'react'\nimport classNames from \"classnames\";\nimport Slider from '../Slider/Slider';\nimport Button from '../Button/Button';\nimport {priceCache,PerpetualPoolParametersCache, isUnlocked,unlock, DeriEnv, deriToNatural, getFundingRate, getUserWalletBalance, getWalletBalance, getPositionInfo, getSpecification, getEstimatedFee, getLiquidityUsed, hasWallet, getEstimatedLiquidityUsed, getEstimatedFundingRate} from '../../lib/web3js/index'\nimport NumberFormat from 'react-number-format';\nimport withModal from '../hoc/withModal';\nimport TradeConfirm from './Dialog/TradeConfirm';\nimport DepositMargin from './Dialog/DepositMargin'\nimport useInterval from '../../hooks/useInterval';\n\n\n\n\nexport default function Trade({wallet = {},spec = {}, specs = [],onSpecChange,indexPrice}){\n  const [direction, setDirection] = useState('long');\n  const [contractInfo, setContractInfo] = useState(null);\n  const [dropdown, setDropdown] = useState(false);  \n  const [margin, setMargin] = useState('0.00');  \n  const [position, setPosition] = useState({});\n  const [fundingRate, setFundingRate] = useState('0.00');\n  const [fundingRateTip, setFundingRateTip] = useState('');\n  const [fundingRateAfter, setFundingRateAfter] = useState('');\n  const [transFee, setTransFee] = useState('');\n  const [poolLiquidity, setPoolLiquidity] = useState('');\n  const [liqUsedPair, setLiqUsedPair] = useState({});\n  const [indexPriceClass, setIndexPriceClass] = useState('');\n  const indexPriceRef = useRef();\n  \n\n  //交易信息\n  const [tradeInfo, setTradeInfo] = useState({});\n  //控制状态\n  const [volume, setVolume] = useState('');  \n\n  useInterval(loadPosition,3000)\n\n  const directionClazz = classNames('checked-long','check-long-short',' long-short',{' checked-short' : direction === 'short'})\n  const selectClass = classNames('dropdown-menu',{'show' : dropdown})\n  const volumeClazz = classNames('contrant-input',{'inputFamliy' : volume !== ''})\n\n  //是否有 spec\n  const hasSpec = () => spec && spec.pool\n\n  //是否有链接钱包\n  const hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n\n  const directionChange = direction => {\n    setVolume('')\n    setDirection(direction)\n  }\n\n  const onDropdown = (event) => {\n    if(specs.length > 0){\n      event.stopPropagation();\n      setDropdown(!dropdown)    \n    }\n  }\n\n  //切换交易标的\n  const onSelect = select => {\n    const selected = specs.find(config => config.symbol === select.symbol )    \n    onSpecChange(selected);\n    setVolume('')\n    setTradeInfo({})\n  }\n\n  const onSlide = value => {    \n    setMargin(value);\n  }\n\n  //refresh cache\n  const refreshCache = () => {\n    if(hasConnectWallet() && hasSpec()){\n      const {chainId,account} = wallet.detail;\n      const address = spec.pool\n      priceCache.clear();\n      priceCache.update(chainId,address);\n      PerpetualPoolParametersCache.update(chainId,address,account);\n    }\n  }\n\n\n  //资金费率\n  const loadFundingRate = async () => {\n    if(hasConnectWallet() && hasSpec()){    \n      const res = await getFundingRate(wallet.detail.chainId,spec.pool)\n      if(res){\n        setFundingRate(res.fundingRate0)\n        const tip = `Funding  Rate (per block) = ${res.fundingRatePerBlock}` +\n        `\\n(1 Long contract pays 1 short contract ${res.fundingRatePerBlock} ${spec.bTokenSymbol} per block)`\n        setFundingRateTip(tip);\n        setPoolLiquidity(res.liquidity)\n      }\n    }\n  }\n\n\n  //当前仓位\n  async function loadPosition() {\n    if(hasConnectWallet() && hasSpec()) {\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account);\n      if(position){\n        setPosition(position);        \n      }\n    }\n  }\n\n  //价值合同信息\n  const loadContractInfo = async () => {\n    if(hasConnectWallet() && hasSpec()){\n      const contractInfo = await getSpecification(wallet.detail.chainId,spec.pool,wallet.detail.account);      \n      setContractInfo(contractInfo)      \n    }\n  }\n\n  //交易费用\n  const loadTransactionFee = async () => {\n    if(hasConnectWallet() && hasSpec()) {\n      const transFee = await getEstimatedFee(wallet.detail.chainId,spec.pool,Math.abs(volume));\n      setTransFee(transFee);\n    }\n  }\n\n  //计算流动性的变化\n  const calcLiquidityUsed = async () => {\n    if(hasConnectWallet() && hasSpec()) {\n      const {detail} = wallet\n      const curLiqUsed = await getLiquidityUsed(detail.chainId,spec.pool)\n      const afterLiqUsed = await getEstimatedLiquidityUsed(detail.chainId,spec.pool,volume)\n      if(curLiqUsed && afterLiqUsed){\n        setLiqUsedPair({curLiqUsed : curLiqUsed.liquidityUsed0,afterLiqUsed : afterLiqUsed.liquidityUsed1})\n      }\n    }\n  }\n\n  //计算funding rate的变化\n  const calcFundingRateAfter = async () => {\n    if(hasConnectWallet() && hasSpec()){\n      const fundingRateAfter = await getEstimatedFundingRate(wallet.detail.chainId,spec.pool,volume);\n      if(fundingRateAfter){\n        setFundingRateAfter(fundingRateAfter.fundingRate1);\n      }\n    }\n  }\n\n\n  //处理输入相关方法\n  const onFocus = event => {\n    const target =event.target;\n    target.setAttribute('class','contrant-input inputFamliy')\n  }\n\n  const onBlur = event => {\n    const target =event.target;\n    if(target.value === '') {\n      target.setAttribute('class','contrant-input')\n    }    \n  }\n\n  const onKeyUp = event => {\n    return event.target.value !== '' && /^\\d*\\.?\\d*$/.test(event.target.value)\n  }\n\n  //完成交易\n  const afterTrade = () => {\n    setVolume('')\n    loadPosition();\n  }\n\n\n  const initialzie = () => {    \n    refreshCache(); //refresh cache\n    loadFundingRate(); // funding rate changed\n    loadPosition() // balance in contract changed\n    loadContractInfo(); //contract info change    \n  }\n\n  //计算交易相关数据（dynamic balance、margin、available balance)\n  const calcTradeInfo = () => {\n    if(position && contractInfo && indexPrice) {\n      const currentPosition = (+volume) + (+position.volume)\n      const contractValue = Math.abs(currentPosition) * indexPrice.index * contractInfo.multiplier;\n      const dynamicBalance = ((+position.margin) + (+position.unrealizedPnl)).toFixed(2)\n      const margin = (contractValue * contractInfo.minInitialMarginRatio).toFixed(2);\n      const leverage = (+contractValue / +dynamicBalance).toFixed(1);\n      const available = (+dynamicBalance) - (+margin)\n      const converted = contractValue / indexPrice.index\n      const tradeInfo = {\n        volume,         //合约数量\n        dynamicBalance, //动态余额\n        margin,         //存入保证金\n        marginHeld : position.marginHeld ,//冻结保证金 \n        available,      //可用余额\n        converted,      //换算的值\n        leverage,        //杠杆\n      }\n      setTradeInfo(tradeInfo);\n    }\n  }\n\n  //spec select hide listener\n  useEffect(() => {\n    const bodyClickListener = document.body.addEventListener('click',() => setDropdown(false),false)\n    return () => {\n      document.body.removeEventListener('click',bodyClickListener)\n    }\n  }, []);\n\n  //spec --> price index --> funding rate --> balance -->  contract info\n  useEffect(() => {\n    initialzie();\n    return () => {\n    };\n  }, [wallet.detail,spec]);\n\n\n  useEffect(() => {\n    calcTradeInfo()\n    if(indexPriceRef.current){\n      setIndexPriceClass(indexPriceRef.current > indexPrice.index ? 'fall' : 'rise')\n    }\n    indexPriceRef.current = indexPrice.index;\n    return () => {\n    };\n  }, [position.unrealizedPnl,position.volume,indexPrice.index,volume]);\n\n  useEffect(() => {\n    calcFundingRateAfter();\n    calcLiquidityUsed();\n    loadTransactionFee();\n    return () => {      \n    };\n  }, [volume]);\n\n\n  useEffect(() => {    \n    if(contractInfo){\n      const volume = (+margin) / ((+indexPrice.index) * (+contractInfo.multiplier) * (+contractInfo.minInitialMarginRatio)) - (+position.volume)\n      if(!isNaN(volume)){\n        const number = Math.floor(volume);\n        if((number) >= 0){\n          setDirection('long')\n        } else {\n          setDirection('short')\n        }\n        const cloned = {...tradeInfo}\n        cloned.volume = number;\n        setTradeInfo(cloned)\n        setVolume(number);\n      }\n    }\n    return () => {      \n    };\n  }, [margin]);\n\n\n   \n  return (\n    <div className='trade-info'>\n    <div className='trade-peration'>\n      <div className='check-baseToken'>\n        <div className='btn-group check-baseToken-btn'>\n          <button\n            type='button'\n            onClick={onDropdown}\n            className='btn chec'>\n            {spec.symbol} / {spec.bTokenSymbol} (10X)\n            <span\n              className='check-base-down' onClick={onDropdown}\n            ><svg\n              t='1616752321986'\n              className='icon'\n              viewBox='0 0 1024 1024'\n              version='1.1'\n              xmlns='http://www.w3.org/2000/svg'\n              p-id='1700'\n              width='16'\n              height='16'\n            >\n                <path\n                  d='M843.946667 285.866667L512 617.386667 180.053333 285.866667 119.893333 346.026667l331.946667 331.946666L512 738.133333l392.106667-392.106666-60.16-60.16z'\n                  p-id='1701'\n                  fill='#cccccc'\n                ></path></svg>\n              </span>\n          </button>\n          <div className={selectClass}>\n            <div className='dropdown-box'>\n              {specs.map((config,index) => {\n                return (\n                  <div className='dropdown-item' key={index} onClick={(e) => onSelect(config)}>              \n                    {config.symbol} / {config.bTokenSymbol} (10X)\n                  </div>\n                )\n              })}\n            </div>\n            \n          </div>\n        </div>\n\n        <div className='price-fundingRate pc'>\n          <div className='index-prcie'>\n            Index Price: <span className={indexPriceClass}>&nbsp; <NumberFormat value={indexPrice.index} displayType='text'/></span>\n          </div>\n          <div className='funding-rate'>\n            <span>Funding Rate Annual: &nbsp;</span>\n            <span className='funding-per' title={fundingRateTip}>{ fundingRate }</span> \n          </div>\n        </div>\n        <div className='price-fundingRate mobile'>\n          <div className='index-prcie'>\n            Index: <span className={indexPriceClass}>&nbsp; <NumberFormat value={indexPrice.index} displayType='text'/></span>\n          </div>\n          <div className='funding-rate'>\n            <span>Funding: &nbsp;</span>\n            <span className='funding-per' title={fundingRateTip}>{ fundingRate }</span> \n          </div>\n        </div>\n      </div>\n      <div className={directionClazz}>\n        <div className='check-long' onClick={() => directionChange('long')}>LONG / BUY</div>\n        <div className='check-short' onClick={() => directionChange('short')}>SHORT / SELL</div>\n      </div>\n      <div className='the-input'>\n        <div className='left'>\n          <div className='current-position'>\n            <span>Current Position</span>\n            <span className='position-text'>{position.volume }</span>\n          </div>\n          <div className='contrant'>            \n            <input\n              type='number'\n              onFocus={onFocus}\n              onBlur={onBlur}\n              onKeyUp={onKeyUp}\n              disabled={!tradeInfo.available}\n              onChange={event =>  setVolume(direction === 'long' ? event.target.value : -event.target.value)}\n              value={tradeInfo.volume && Math.abs(tradeInfo.volume)}\n              className={volumeClazz}\n              placeholder='Contract Volume'\n            />\n            <div className='title-volume' >\n              Contract Volume\n            </div>\n          </div>          \n          {!!volume && <div className='btc'><NumberFormat value={tradeInfo.converted} allowNegative={false} displayType='text' decimalScale={4} prefix ='= ' suffix={` ${spec.unit}`}/></div>}\n        </div>\n        <div className='right-info'>\n          <div className='contrant-info'>\n            <div className='balance-contract'>\n              <span className='balance-contract-text pc'>\n                Balance in Contract<br/>\n                (Dynamic Balance)\n              </span>\n              <span className='balance-contract-text mobile'>\n                Balance in Contract<br/>\n                (Dyn Bal.)\n              </span>\n              <span className='balance-contract-num'>\n                <NumberFormat value={ tradeInfo.dynamicBalance } displayType='text' decimalScale={2}/>\n              </span>\n            </div>\n            <div className='box-margin'>\n              <span> Margin </span>\n              <span className='margin'>\n                <NumberFormat value={ tradeInfo.margin } allowNegative={false}  displayType='text' decimalScale={2}/>\n              </span>\n            </div>\n            <div className='available-balance'>\n              <span className='available-balance pc'> Available Balance </span>\n              <span className='available-balance mobile'>Avail Bal</span>\n              <span className='available-balance-num'>\n                <NumberFormat value={ tradeInfo.available } displayType='text' decimalScale={2} />\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='slider mt-13'>\n        <Slider max={tradeInfo.dynamicBalance} onValueChange={onSlide} start={tradeInfo.margin}/>\n      </div>\n      <div className='title-margin'>Margin</div>\n      <div className='enterInfo'>\n        {!!volume && <>\n        <div className='text-info'>\n          <div className='title-enter pool'>Pool Liquidity</div>\n          <div className='text-enter poolL'>\n            <NumberFormat value={ poolLiquidity } decimalScale={2} suffix={` ${spec.bTokenSymbol}` } displayType='text'/> \n          </div>\n        </div>\n        <div className='text-info'>\n          <div className='title-enter'>Liquidity Used</div>\n          <div className='text-enter'>\n            <NumberFormat value={liqUsedPair.curLiqUsed} displayType='text' suffix='%'/> -> <NumberFormat value={ liqUsedPair.afterLiqUsed } displayType='text' decimalScale={2}  suffix='%'/>\n          </div>\n        </div>\n        <div className='text-info'>\n          <div className='title-enter'>Funding Rate Impact</div>\n          <div className='text-enter'>\n            <NumberFormat value={ fundingRate } displayType='text' allowNegative={false} decimalScale={4}/> -> <NumberFormat value={ fundingRateAfter } displayType='text' allowNegative={false} decimalScale={4}/>\n          </div>\n        </div>\n        <div className='text-info'>\n          <div className='title-enter'>Transaction Fee</div>\n          <div className='text-enter'>\n            <NumberFormat value={ transFee } decimalScale={2} suffix={` ${spec.bTokenSymbol}` } displayType='text'/>             \n          </div>\n        </div>\n        </>}\n      </div>\n      <Operator hasConnectWallet={hasConnectWallet} \n                transFee={transFee} \n                wallet={wallet} \n                spec={spec} \n                indexPrice={indexPrice} \n                available={tradeInfo.available}\n                volume={volume} \n                direction={direction}\n                leverage={tradeInfo.leverage}\n                afterTrade={afterTrade}\n                position={position.volume}\n       />\n    </div>\n  </div>\n  )\n}\n\n\nconst ConfirmDialog = withModal(TradeConfirm)\nconst DepositDialog = withModal(DepositMargin)\n\nfunction Operator({hasConnectWallet,wallet,spec,volume,available,\n                  baseToken,leverage,indexPrice,position,direction,transFee,afterTrade}){\n  const [isApprove, setIsApprove] = useState(true);\n  const [noBalance, setNoBalance] = useState(false);\n  const [emptyVolume, setEmptyVolume] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  \n  const connect = () => {\n    wallet.connect()\n  }\n\n  const approve = () => {\n    const {detail} = wallet\n    const res = unlock(detail.chainId,spec.pool,detail.account);\n    if(res.success){\n      setIsApprove(true);\n    } else {\n      alert(res.error)\n    }\n  }\n\n\n  const afterDeposit = async () => {    \n    onClose();\n    afterTrade()\n  }\n\n\n  //load Approve status\n  const loadApprove = async () => {\n    if(hasConnectWallet() && spec.pool){\n      const {detail} = wallet\n      const result = await isUnlocked(detail.chainId,spec.pool,detail.account).catch(e => console.log(e))\n      setIsApprove(result);\n    }\n  }\n\n  useEffect(() => {\n    if((+available) > 0){\n      setNoBalance(false)\n    } else {\n      setNoBalance(true)\n    }\n    return () => {\n    };\n  }, [available]);\n\n  useEffect(() => {\n    setEmptyVolume(!volume)\n    return () => {};\n  }, [volume]);\n\n\n  useEffect(() => {\n    loadApprove();\n    return () => {      \n    };\n  }, [spec.pool]);\n\n  const onClose = () => {\n    setModalIsOpen(false)\n  }\n  \n\n  let actionElement =(<>\n    <ConfirmDialog  wallet={wallet}\n                    spec={spec}\n                    modalIsOpen={modalIsOpen} \n                    onClose={onClose} \n                    leverage = {leverage} \n                    baseToken={baseToken} \n                    volume={volume} \n                    direction={direction} \n                    position={position} \n                    indexPrice={indexPrice.index} \n                    transFee={transFee}\n                    afterTrade={afterTrade}\n                    />\n    <button className='short-submit' onClick={() => setModalIsOpen(true)}>TRADE</button>\n  </>)\n\n  if(hasConnectWallet()){\n    if(!isApprove) {\n      actionElement = <Button className='approve' btnText='APPROVE' onClick={approve}/>\n    } else if(noBalance && available !== undefined) {\n      actionElement = (<>\n        <DepositDialog \n          wallet={wallet}\n          modalIsOpen={modalIsOpen} \n          onClose={onClose}\n          spec={spec}\n          afterDeposit={afterDeposit}\n        />\n        <div className=\"noMargin-text\">You have no fund in contract. Please deposit first.</div>\n        <button className='short-submit'  onClick={() => setModalIsOpen(true)}>DEPOSIT</button>\n      </>)\n    } else if(emptyVolume) {\n      actionElement = <Button className='btn btn-danger short-submit' disabled btnText='ENTER VOLUME'/>\n    }\n  } else {\n    actionElement = <Button className='btn btn-danger connect' btnText='Connect Wallet' click={connect}/>\n  }\n  return (\n    <div className='submit-btn'>\n      {actionElement}        \n    </div>\n  )\n}","import React, { useState ,useEffect} from 'react'\nimport Button from \"../../Button/Button\";\nimport NumberFormat from 'react-number-format';\nimport { tradeWithMargin } from \"../../../lib/web3js\";\n\n\nexport default function TradeConfirm({wallet,spec,onClose,volume,direction,position = 0,indexPrice,leverage,transFee,afterTrade}){\n\n  const trade = async () => {\n    const res = await tradeWithMargin(wallet.detail.chainId,spec.pool,wallet.detail.account,volume)\n    if(res.success){\n      afterTrade()\n      onClose()\n    } else {\n      const msg = typeof res.error === 'string' ? res.error : res.error.errorMessage || res.error.message\n      alert(msg)\n    }\n  }\n\n\n  const afterTradePosition = ((+volume) + (+position))\n\n  return (\n    <div className='modal-dialog'>\n      <div className='modal-content'>\n        <div className='modal-header'>\n          <div className='title'>CONFIRM</div>\n          <div className='close' data-dismiss='modal' onClick={onClose}>\n            <span>&times;</span>\n          </div>\n        </div>\n        <div className='modal-body'>\n          <div className='contract-box-info'>\n            <div className='top'>\n              <div className='text'>\n                <div className='text-title'># of Contracts</div>\n                <div className='text-num'>{ volume }</div>\n              </div>\n              <div className='text'>\n                <div className='text-title'>Position after execution</div>\n                <div className='text-num'>{ afterTradePosition }</div>\n              </div>\n              <div className='text'>\n                <div className='text-title'>Direction</div>\n                <div className='text-num'><span className={direction}>{direction}</span></div>\n              </div>\n              <div className='text'>\n                <div className='text-title'>Trade Price (estimated)</div>\n                <div className='text-num'><NumberFormat value={ indexPrice } decimalScale={2}  displayType='text'/></div>\n              </div>\n              <div className='text'>\n                <div className='text-title'>Leverage after execution</div>\n                <div className='text-num'>{ leverage }X</div>\n              </div>\n              <div className='text'>\n                <div className='text-title'>Transaction Fee</div>\n                <div className='text-num'>\n                  <NumberFormat value={ transFee } decimalScale={2} suffix={` ${spec.bTokenSymbol}` } displayType='text'/>                   \n                </div>\n              </div>\n            </div>\n            <div className='modal-footer'>\n              <div className='long-btn' v-if='confirm'>\n                <button className='cancel' onClick={onClose}>CANCEL</button>\n                <Button className='confirm' btnText='OK' click={trade} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useState } from 'react'\nimport Position from './Position';\nimport History from './History';\nimport classNames from 'classnames';\nimport ContractInfo from '../ContractInfo/ContractInfo';\nimport Trade from './Trade';\n\nexport default function LiteTrade({wallet,specs,spec,onSpecChange,isPro,indexPrice}){\n  const [curTab, setCurTab] = useState('trade');\n\n  const switchTab = current => setCurTab(current);\n  const tradeClassName = classNames('trade-position',curTab)\n  return (\n      <div className={tradeClassName}>\n        <div className='header-top'>\n          <div className='header'>\n            <span className='trade' onClick={() => switchTab('trade')}>\n              TRADE\n            </span>\n            {!isPro && <>\n            <span\n              className='position' onClick={() => switchTab('position')}>\n              MY POSITION\n            </span>\n            <span className='history' onClick={() => switchTab('history')}>\n              HISTORY\n            </span>\n            </>}\n          </div>\n        </div>\n        <Trade wallet ={wallet}  spec={spec} specs={specs} indexPrice={indexPrice}  onSpecChange={onSpecChange}/>\n        <Position  wallet ={wallet} spec={spec}/>\n        <History wallet ={wallet} spec={spec} specs={specs} />\n        <ContractInfo wallet={wallet} spec={spec}/>   \n    </div> \n  )\n}"],"sourceRoot":""}