{"version":3,"sources":["lib/account/WalletManager.js","components/Button/Button.js","components/Mining/Liquidity/Dialog/AddDialog.js","hooks/useSpecification.js","components/Mining/Liquidity/Dialog/RemoveDialog.js","components/Mining/Liquidity/Liquidity.js","components/Mining/Liquidity/LiquidityMining.js","components/Claim/Claim.js","hooks/useConfig.js","hooks/useClaimInfo.js","components/Mining/Trade/Liquidity.js","components/Mining/Trade/TradeMining.js"],"names":["walletKey","cc","config","DeriEnv","get","isConnected","window","ethereum","setWallet","chianId","account","a","getUserWalletBalance","balance","symbol","wallet","formatBalance","sessionStorage","setItem","JSON","stringify","getWallet","getItem","parse","undefined","removeWallet","removeItem","Button","btnText","className","click","afterClick","useState","status","setStatus","loadRef","useRef","onClick","current","style","display","result","ref","marginRight","AddDialog","isOpen","address","baseToken","onClose","customizeStyle","addValue","setAddValue","setBalance","modalIsOpen","setIsOpen","spec","setSpec","getSpec","getSpecification","chainId","useEffect","useSpecification","appElement","document","getElementById","closeModel","getBalance","total","addLiq","alert","minAddLiquidity","addLiquidity","success","data-dismiss","displayType","value","thousandSeparator","decimalScale","type","placeholder","onChange","e","target","RemoveDialog","liqInfo","setLiqInfo","amount","setAmount","loadLiqidityInfo","getLiquidityInfo","info","shares","remove","isNaN","removeLiquidity","Liquidity","liquidity","setLiquidity","loadLiquidityInfo","getPoolInfoApy","apyPool","poolLiquidity","apy","shareValue","toFixed","percent","values","getPoolLiquidity","Operator","loadLiquidity","dialogStyles","overlay","position","background","content","border","inset","overflow","isApproved","setIsApproved","btnType","setBtnType","setBtnText","walletContext","useContext","WalletContext","isApprove","isUnlocked","approve","unlock","cw","connect","LiquidityMining","props","walletManager","Claim","claimInfo","setClaimInfo","interval","loadClaimInfo","getUserInfoAll","claimed","deriToNatural","unclaimed","valid","harvestDeriLp","lp","harvestDeriTrade","trade","setInterval","clearInterval","useClaimInfo","claimInfoInterval","remainingTime","setRemainingTime","claim","parseInt","Date","now","mintDToken","period","dis","h","m","s","text","id","role","aria-hidden","userInfoInPool","setUserInfoInPool","tradeSummary","setTradeSummary","loadUserInfoInPool","userInfo","getUserInfoInPool","userInfoPool","myTradingVolumeCurrent","volume1h","getTradeInfo","poolInfo","totalTradingVolumeCurrent","to","TradeMining","WalletManager"],"mappings":"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","file":"static/js/1.7e2f2e6d.chunk.js","sourcesContent":["import { getUserWalletBalance ,DeriEnv} from \"../web3js\";\nimport config from '../../config.json'\nimport { formatBalance } from \"../../utils/utils\";\n\nconst walletKey = 'mm_wallet_key'\nconst env = DeriEnv.get();\nconst cc = config[env]\n\nclass WalletManager {\n\n  //是否已连接\n  isConnected = () => window.ethereum.isConnected();\n\n  //设置钱包\n  setWallet = async (chianId,account) => {\n    if(cc[chianId]){\n      const balance = await getUserWalletBalance(chianId,account)\n      const symbol = cc[chianId].symbol\n      const wallet = {\n        chianId,\n        account,\n        balance : formatBalance(balance),\n        symbol\n      }\n      sessionStorage.setItem(walletKey,JSON.stringify(wallet))\n      return wallet;\n    }\n    return null;\n  }\n\n  getWallet = () => sessionStorage.getItem(walletKey) ? JSON.parse(sessionStorage.getItem(walletKey)) : undefined;\n\n  removeWallet = () =>sessionStorage.removeItem(walletKey)\n\n}\n\nexport default new WalletManager();","import {useState,useRef} from 'react';\nexport default function Button({btnText,className,click,afterClick}){\n  const [status, setStatus] = useState('enabled');\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    setStatus('disabled')\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n    const result = await click();\n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    if(result){\n      afterClick && afterClick()\n    }\n  }\n\n  return(\n    <button className={className} onClick={onClick} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {btnText}\n        </button>\n  )\n}","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport Button from '../../../Button/Button';\nimport Modal from 'react-modal'\nimport { addLiquidity, getUserWalletBalance, getSpecification } from '../../../../lib/web3js';\nimport useSpecification from '../../../../hooks/useSpecification';\n\n\n\nexport default function AddDialog({isOpen,wallet = {},address,baseToken,onClose,customizeStyle}){\n  const [addValue, setAddValue] = useState('')\n  const [balance,setBalance] = useState(wallet.balance)\n  const [modalIsOpen,setIsOpen] = useState(isOpen);\n  const [status, setStatus] = useState('enabled');\n  const spec = useSpecification({wallet,address});\n  const appElement = document.getElementById('root')\n\n\tconst closeModel = () => {\n    if(status === 'enabled') {\n      setIsOpen(false);\n      onClose();\n    }\n  }\n\n  const getBalance = async () => {\n    if(wallet && wallet.account){\n      const total = await getUserWalletBalance(wallet.chainId,wallet.account);\n      setBalance(total)\n    }\n  }\n\n\n  useEffect(() => {\n    getBalance();\n  }, [])\n\n  const input = (e) => {\n    const {value} =e.target\n    setAddValue(value)\n  }\n\n  const addAll = () => {\n    setAddValue(wallet.balance);\n  }\n\n  const addLiq = async () => {\n    if(addValue > wallet.balance) {\n      alert(\"not sufficient funds\");\n      return false;\n    }\n    if((+addValue) < (+spec.minAddLiquidity)) {\n      alert(`The input liquidity shall not be less than ${spec.minAddLiquidity}`);\n      return false;\n    }\n    setStatus('disabled')\n    const res = await addLiquidity(wallet.chainId,address,wallet.account,addValue)\n    if (!res.success) {\n      alert(\"failure of transaction\");\n    }\n    setStatus('enabled')\n    return true;\n  }\n\n\n  useEffect(() => {\n    setIsOpen(isOpen)\n    return () => {\n      isOpen = false\n      setAddValue('')\n    } \n  }, [isOpen]);\n\n\n  return(\n    <Modal isOpen={modalIsOpen} style={customizeStyle} appElement={appElement}>\n      <div className='modal-dialog'>\n          <div className='modal-content'>\n            <div className='modal-header'>\n              <div className='title'>ADD LIQUIDITY</div>\n              <div className='close' data-dismiss='modal' onClick={closeModel}>\n                <span>&times;</span>\n              </div>\n            </div>\n            <div className='modal-body'>\n              <div className='margin-box-info'>\n                <div>Wallet Balance</div>\n                <div className='money'>\n                  <span> \n                    <span className='bt-balance'>\n                      <NumberFormat displayType='text' value ={balance } thousandSeparator={true} decimalScale={2}/>\n                    </span> \n                      <div className='base-token'>{ baseToken }</div> \n                    </span>\n                  <span className='add'></span>\n                </div>\n                <div className='enter-margin'>\n                  <div className='input-margin'>\n                    <div className='box'>\n                      <div className='amount' style={{display : addValue ? 'block' : 'none'}}>LIQUIDITY</div>\n                      <input\n                        type='number'\n                        className='margin-value'\n                        placeholder='LIQUIDITY'\n                        value={addValue}\n                        onChange={input}\n                      />\n                    </div>\n                  </div>\n                  <div>{ baseToken }</div>\n                </div>\n                <div className='max'>\n                  MAX: <span className='max-num'>{balance }</span>\n                  <span className='max-btn-left' onClick={addAll}>ADD ALL</span>\n                </div>\n                <div className='add-margin-btn'>\n                  <Button className='margin-btn' click={addLiq} btnText='ADD' afterClick={closeModel}/>\n                </div>\n              </div>\n            </div>    \n          </div>\n        </div>\n    </Modal>\n  )\n}","import { useState, useEffect } from 'react'\nimport { getSpecification } from \"../lib/web3js\";\n\nexport default function useSpecification({wallet,address}){\n  const [spec, setSpec] = useState({});\n\n  const getSpec = async () => {\n    if(wallet && wallet.account){\n      const spec =  await getSpecification(wallet.chainId,address,wallet.account);\n      setSpec(spec);\n    }\n  }\n\n  useEffect(() => {\n    getSpec();\n  }, []);\n\n  return spec;\n}","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal'\nimport NumberFormat from 'react-number-format'\nimport { getLiquidityInfo, removeLiquidity } from '../../../../lib/web3js';\nimport Button from '../../../Button/Button';\n\nexport default function RemoveDialog({isOpen,wallet,address,onClose,customizeStyle}){\n  const [modalIsOpen,setIsOpen] = useState(isOpen);\n  const [liqInfo, setLiqInfo] = useState({})\n  const [amount, setAmount] = useState('');\n  const [status, setStatus] = useState('enabled');\n  const appElement = document.getElementById('root')\n\n\tconst closeModel = () => {\n    if(status === 'enabled') {\n      setIsOpen(false);\n      onClose && onClose();\n    }\n  }\n\n  const loadLiqidityInfo = async () => {\n    const info = await getLiquidityInfo(wallet.chainId,address,wallet.account);\t\n    setLiqInfo({shares : info.shares})\n  }\n\n  const addAll = () => {\n    setAmount(liqInfo.shares)\n  }\n\n  const onChange = e => {\n    const {value} = e.target;\n    setAmount(value)\n  }\n\n  const remove = async () => {\n    if (liqInfo.shares < 1 && liqInfo.shares != 0) {\n      alert('Leaving staking balance of smaller than 1 is not allowed. Please click \"MAX\" to remove all if you are to withdraw all of your liquidity.');\n      return false;\n    }\n    if ((+liqInfo.shares) < (+amount)) {\n      alert(`Your current max removable shares are  ${liqInfo.shares}`);\n      return false;\n    }\n    if (+amount <= 0 || isNaN(amount)) {\n      alert(\"Invalid Liquidity!\");\n      return false;\n    }\n    setStatus('disable')\n    const res = await removeLiquidity(wallet.chainId,address,wallet.account,amount);\n    if(!res.success){\n      alert(\"failure of transaction\");\n      return false; \n    }\n    setStatus('enabled')\n    return true;\n  }\n\n  useEffect(() => {\n    loadLiqidityInfo();\n    return () => {\n      setAmount('')\n    }\n  }, [])\n\n  useEffect(() => {\n    setIsOpen(isOpen)\n    return () => isOpen = false\n  }, [isOpen]);\n  \n  \n  return(\n    <Modal isOpen={modalIsOpen} style={customizeStyle} appElement={appElement}>\n      <div className='modal-dialog'>\n          <div className='modal-content'>\n            <div className='modal-header'>\n              <div className='title'>REMOVE LIQUIDITY</div>\n              <div className='close' data-dismiss='modal' onClick={closeModel}>\n                <span>&times;</span>\n              </div>\n            </div>\n            <div className='modal-body'>          \n              <div className='margin-box-info'>\n                <div>Shares Available</div>\n                <div className='money'>\n                  <span>\n                    <span className='bt-balance'>\n                      <NumberFormat displayType='text' value ={liqInfo.shares} thousandSeparator={true} decimalScale={2}/>\n                      </span>\n                      </span>\n                  <span className='remove'></span>\n                </div>\n                <div className='enter-margin'>\n                  <div className='input-margin'>\n                    <div className='box'>\n                      <div className='amount' style={{display : amount ? 'block' : 'none'}}>\n                        LIQUIDITY SHARES\n                      </div>\n                      <input\n                        type='number'\n                        className='margin-value'\n                        placeholder='LIQUIDITY SHARES'\n                        value={amount}\n                        onChange={onChange}\n                      />\n                    </div>\n                  </div>\n                  <div>Shares</div>\n                </div>\n                <div className='max'>\n                  MAX REMOVEABLE:\n                  <span className='max-num'>{liqInfo.shares}</span>\n                  <span className='max-btn-left' onClick={addAll}>REMOVE ALL</span>\n                </div>\n                <div className='add-margin-btn'>\n                  <Button click={remove} className='margin-btn' btnText='REMOVE' afterClick={closeModel}/>\n                </div>\n              </div>\n            </div>    \n          </div>\n        </div>\n    </Modal>)\n}","import React, { useState, useEffect ,useContext} from 'react'\nimport {\n\tgetLiquidityInfo,getPoolInfoApy,isUnlocked,unlock,getPoolLiquidity\n} from '../../../lib/web3js/index'\nimport { WalletContext } from '../../../context/WalletContext';\nimport AddDialog from './Dialog/AddDialog';\nimport RemoveDialog from './Dialog/RemoveDialog';\nimport Button from '../../Button/Button';\n\nexport default function Liquidity({wallet,chainId,baseToken,address}) {\n  const [liquidity,setLiquidity] = useState({})\n\n\tconst loadLiquidityInfo = async () => {\n\t\tconst apyPool = await getPoolInfoApy(chainId,baseToken)\n\t\tif(wallet){\n\t\t\tconst info = await getLiquidityInfo(chainId,address,wallet.account);\n\t\t\tif(info){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal :  (+info.poolLiquidity),\n\t\t\t\t\tapy : (+apyPool.apy),\n\t\t\t\t\tshareValue : (+info.shareValue).toFixed(6),\n\t\t\t\t\tpercent : (((info.shares * info.shareValue) / info.poolLiquidity) * 100).toFixed(2) + '%',\n\t\t\t\t\tshares : (+info.shares).toFixed(2),\n\t\t\t\t\tvalues : (+info.shares * info.shareValue).toFixed(2)\n\t\t\t\t})\t\n\t\t\t}\n\t\t} else {\n\t\t\tconst info = await getPoolLiquidity(chainId,address);\n\t\t\tif(info){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal : (+info.liquidity),\n\t\t\t\t\tapy : (+apyPool.apy)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tloadLiquidityInfo();\n\t}, [])\n\n\n  return (\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Provide { baseToken } Earn DERI</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Pool Total Liquidity</div>\n\t\t\t\t\t\t<div className=\"text-num\"> { liquidity.total || '--'} { baseToken }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">APY</div>\n\t\t\t\t\t\t<div className=\"text-num\">{ liquidity.apy || '--' }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Liquidity Share Value</div>\n\t\t\t\t\t\t<div className=\"text-num\">{ liquidity.shareValue || '--'} { baseToken }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">My Liquidity Pencentage</div>\n\t\t\t\t\t\t<div className=\"text-num\">{ liquidity.percent || '--' }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Staked Balance </div>\n\t\t\t\t\t\t<div className=\"text-num\">{ liquidity.shares || '--' }  <span>Shares</span> </div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd claim-network\">\n\t\t\t\t\t<div className=\"text-title money\">{liquidity.values} { baseToken }</div>\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title-check\">\n\t\t\t\t</div>\n\t\t\t\t<Operator wallet={wallet} chainId={chainId} address={address} baseToken={baseToken} loadLiquidity={loadLiquidityInfo}/>\n\t</div>\n  )\n}\n\n\nconst dialogStyles = {\n  overlay: {\n    position: 'fixed',\n    background: 'none'\n  },\n  content: {\n    position: 'absolute',\n    border : 0,\n    background : 'none',\n\t\tinset : 0,\n\t\toverflow : 'initial'\n  }\n};\n\n//操作区\nfunction Operator({chainId,address,wallet,baseToken,loadLiquidity}) {\n\tconst [isApproved,setIsApproved] = useState(false)\n\tconst [btnType, setBtnType] = useState('add')\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\n\tconst {walletContext} = useContext(WalletContext)\n\n\tconst isApprove = async () => {\n\t\tconst result = wallet && await isUnlocked(chainId,address,wallet.account) \n\t\treturn result\n  }\n\n\tconst approve = async () => {\n\t\tconst res = await unlock(chainId,address,wallet.account);\n\t\tif(res.success){\n\t\t\tsetIsApproved(true)\n\t\t}\n  }\n\n\n\tconst cw = async () => {\n\t\twalletContext.connect();\n\t}\n  \n  const click = async () => {\n    if(wallet && wallet.account){\n      approve()\n    } else {\n      cw();\n    }\n\t}\n\t\n\tconst addLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('add')\n\t}\n\n\tconst onClose = () => {\n\t\tsetIsOpen(false);\n\t\tloadLiquidity()\n\t}\n\n\tconst removeLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('remove')\n\t}\n  \n  useEffect(() => {\n\t\t//todo 判断网络\n    if(wallet && wallet.account){\n\t\t\tif(wallet.chainId == chainId){\n\t\t\t\tconst result = isApprove();\n\t\t\t\tsetIsApproved(result);\n\t\t\t\tif(!result){\n\t\t\t\t\tsetBtnText('APPROVE')\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetBtnText(<span className='red-color-font'>Wrong Network</span>)\n\t\t\t}\n    } else {\n      setBtnText('Collect Wallet')\n    }\n\t}, [])\n\n  return (\n    <div className=\"liquidity-btn\">\n\t\t\t{\n\t\t\t\tbtnType === 'add' \n\t\t\t\t? <AddDialog isOpen={isOpen} onClose={onClose} chainId={chainId} address={address} wallet={wallet} baseToken={baseToken} customizeStyle={dialogStyles}/> \n\t\t\t\t: <RemoveDialog isOpen={isOpen} onClose={onClose} chainId={chainId} address={address} wallet={wallet} baseToken={baseToken} customizeStyle={dialogStyles}/>\n\t\t\t}\n      {isApproved &&<div className=\"add-remove-liquidity\">\n      <button \n          className=\"add-liquidity\"\n          onClick={addLiquidity}>\n          ADD LIQUIDITY\n      </button>\n      <button className=\"remove-liquidity\" onClick={removeLiquidity}>\n          REMOVE LIQUIDITY\n      </button>\n    </div>}\n    {!isApproved &&<div className=\"approve\" >\n\t\t\t<Button className='approve-btn' click={click} btnText={btnText}></Button>\n    </div>}\n  </div>\n  )\n}","import walletManager from '../../../lib/account/WalletManager';\nimport Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\n\nexport default function LiquidityMining(props){\n\tconst wallet = walletManager.getWallet();\n  return (\n    <div className=\"liquidity-info\">\n      <Claim wallet={wallet}/>\n      <Liquidity wallet={wallet} {...props}/>\n</div>)\n}","import { useState, useEffect,useContext } from 'react'\n\nimport useClaimInfo from \"../../hooks/useClaimInfo\";\nimport useConfig from \"../../hooks/useConfig\";\nimport { mintDToken ,connectWallet } from \"../../lib/web3js\";\nimport { WalletContext } from '../../context/WalletContext';\n\nexport default function Claim({wallet = {}}){\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\n\tconst [claimInfo,claimInfoInterval] = useClaimInfo(wallet);\n\tconst [remainingTime, setRemainingTime] = useState('')\n\tconst config = useConfig(wallet.chainId) || {}\n\tconst {walletContext} =  useContext(WalletContext)\n\n  //claim deri\n\tconst claim = async () => {\n\t\tif (claimInfo.unclaimed == 0) {\n\t\t\talert('Sorry,no DERI to claim yet');\n\t\t\treturn;\n\t\t}\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\n\t\tif (now < 1800) {\n\t\t\talert('Claiming DERI is disabled during first 30 minutes of each epoch');\n\t\t\treturn;\n\t\t}\n\t\tconst res = await mintDToken(wallet.chainId,wallet.account)\n\t\tif(res.success){\n      clearInterval(claimInfoInterval);\n\t\t} else {\n\t\t\talert('Claim failed')\n\t\t}\n  }\n\n\tconst cw = async () => {\n\t\twalletContext.connect();\n\t}\n\n  //\n\tconst click = async () => {\n\t\tif(wallet && wallet.account){\n\t\t\tclaim();\n\t\t} else {\n\t\t\tcw();\n\t\t}\n\t}\n\n\n\t\n\t//初始化按钮文案和事件\n\tconst initButton = () => {\n\t\tif(wallet && wallet.account){\n\t\t\tsetBtnText('CLAIM')\n\t\t} else {\n\t\t\tsetBtnText('Collect Wallet')\n\t\t}\n\t}\n  \n  useEffect(() => {\n    //计数器\n    const interval = window.setInterval(() => {\n      let period = 3600 * 8;\n      let current = parseInt(Date.now()/1000);\n      let epochBegin = parseInt(current / period)*period;\n      let dis = (epochBegin + period - current);\n      let h = parseInt(dis / 3600);\n      let m = parseInt((dis % 3600)/60)\n      let s = parseInt(dis % 60) \n      setRemainingTime(`${h} h ${m} m ${s} s`);\n\t\t},1000);\n\n\t\tinitButton();\t\t\n    return () => {\n      clearInterval(interval);\n\t\t};\n\t\t\n  }, []);\n\n\n  return (\n    <div className='claim-box'>\n\t\t\t\t<div className='odd title'>My Liquidity-Providing Harvest in Current Epoch</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Current Epoch Remaining Time</div>\n\t\t\t\t\t\t<div className='text-num'>{ remainingTime }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>My Harvest in Current Epoch (estimated)</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.harvestDeriLp } DERI</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Claimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.claimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Unclaimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.unclaimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd claim-network'>\n\t\t\t\t\t\t<div className='text-title'>Your DERI is on { config.text } . Connect to { config.text } to claim.</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='claim-btn'>\n\t\t\t\t\t<button className='claim' onClick={click}\n\t\t\t\t\t\tid='claimmyderi'>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName='spinner spinner-border spinner-border-sm'\n\t\t\t\t\t\t\trole='status'\n\t\t\t\t\t\t\taria-hidden='true'\n\t\t\t\t\t\t\tstyle={{display: 'none'}}></span>\n\t\t\t\t\t\t\t\t{btnText}\n\t\t\t\t\t\t</button>\n\t\t\t\t</div>\n      </div>\n  ) \n}","import config from '../config.json'\nimport {DeriEnv} from '../lib/web3js/index'\nexport default function useConfig(chainId){\n  return config[DeriEnv.get()][chainId];\n}","import { useState, useEffect } from 'react'\nimport { getUserInfoAll ,deriToNatural} from '../lib/web3js';\n\n\nexport default function useClaimInfo(wallet = {}){\n  const [claimInfo, setClaimInfo] = useState({});\n  let interval = null;\n\n  const loadClaimInfo =  async () => {\n    if(wallet && wallet.account){\n      const claimInfo  = await getUserInfoAll(wallet.account);\n      const claimed = deriToNatural(claimInfo.total).toFixed(2);\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade})\n    }\n  }\n\n  useEffect(() => {\n    interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\n    if(wallet.account) {\n      loadClaimInfo();\n    }\n    return () => clearInterval(interval);\n  }, [])\n  return [claimInfo,interval];\n}","import { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { getUserInfoAll,getUserInfoInPool ,getPoolInfoApy} from '../../../lib/web3js';\n\n\n\nexport default function Liquidity({wallet = {},chainId,address}) {\n  const [userInfoInPool,setUserInfoInPool] = useState({})\n  const [tradeSummary, setTradeSummary] = useState({});\n\n\tconst loadUserInfoInPool = async () => {\n\t\tconst userInfo = await getUserInfoAll(wallet.account);\n\t\tconst userInfoPool = await getUserInfoInPool(chainId,address,wallet.account);\n\t\tconst harvestDeriTrade = (+userInfo.trade).toFixed(2);\n\t\tconst myTradingVolumeCurrent = userInfoPool.volume1h\n\t\tsetUserInfoInPool({harvestDeriTrade,myTradingVolumeCurrent})\n\t}\n\n\tconst getTradeInfo = async () => {\n\t\tconst poolInfo = await getPoolInfoApy(chainId,address);\n\t\tconst totalTradingVolumeCurrent = poolInfo.volume1h\n\t\tsetTradeSummary({totalTradingVolumeCurrent})\n\t}\n\n\tuseEffect(() => {\n\t\tif(wallet && wallet.account){\n\t\t\tloadUserInfoInPool();\n\t\t\tgetTradeInfo();\n\t\t}\n\t\treturn () => {};\n\t}, []);\n\n  return(\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Trade to Earn DERI</div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">Total Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ tradeSummary.totalTradingVolumeCurrent }</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">My Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ userInfoInPool.myTradingVolumeCurrent }</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd claim-network\">\n              \n        </div>\n        <div className=\"claim-btn\">\n            <Link to='/lite'>\n                <button className=\"claim\">\n                  TRADE\n                </button>\n              </Link>\n        </div>\n    </div> \n  )\n}","import React,{useState,useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport {getUserInfoAll,getUserInfoInPool,deriToNatural,getPoolInfoApy} from '../../../lib/web3js/index'\nimport WalletManager from '../../../lib/account/WalletManager';\nimport Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\nexport default function TradeMining(props){\n\tconst wallet = WalletManager.getWallet();\n  return(\n    <div className=\"trade-info\">\n      <Claim wallet={wallet}/>\n\t\t\t<Liquidity wallet={wallet} {...props}/>\n  </div>\n  )\n}"],"sourceRoot":""}