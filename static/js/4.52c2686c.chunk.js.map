{"version":3,"sources":["components/Button/Button.js","components/hoc/withModal.js","utils/DeriNumberFormat.js","components/Mining/Liquidity/Liquidity.js","components/Mining/Liquidity/Dialog/AddLiquidity.js","hooks/useSpecification.js","components/Mining/Liquidity/Dialog/RemoveLiquidity.js","components/Mining/Liquidity/LiquidityMining.js","components/Claim/Claim.js","hooks/useClaimInfo.js","hooks/useConfig.js","components/Mining/Trade/Liquidity.js","components/Mining/Trade/TradeMining.js","../node_modules/react-modal/lib/index.js"],"names":["Button","btnText","className","disabled","click","afterClick","useState","status","setStatus","pending","setPending","loadRef","useRef","onClick","a","current","style","display","ref","marginRight","withModal","Component","appElement","document","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","overflow","props","state","modalIsOpen","this","isOpen","onClose","React","DeriNumberFormat","val","replace","renderText","format","displayType","AddDialog","wallet","address","baseToken","afterAdd","balance","addValue","setAddValue","spec","setSpec","getSpec","account","getSpecification","chainId","useEffect","useSpecification","addLiq","alert","minAddLiquidity","addLiquidity","detail","success","value","thousandSeparator","decimalScale","type","placeholder","onChange","e","target","RemoveDialog","liqInfo","afterRemove","amount","setAmount","remove","shares","isNaN","removeLiquidity","data-dismiss","Operator","loadLiquidity","isApproved","setIsApproved","btnType","setBtnType","setIsOpen","setBtnText","setBalance","setLiqInfo","loadLiqidityInfo","isConnected","eqInNumber","getLiquidityInfo","info","loadBalance","getWalletBalance","total","isApprove","isUnlocked","result","approve","unlock","connect","inject","observer","liquidity","setLiquidity","loadLiquidityInfo","getPoolInfoApy","apyPool","poolLiquidity","apy","shareValue","toFixed","percent","values","getPoolLiquidity","suffix","LiquidityMining","Claim","claimInfo","setClaimInfo","interval","loadClaimInfo","getUserInfoAll","claimed","deriToNatural","unclaimed","valid","harvestDeriLp","lp","harvestDeriTrade","trade","window","setInterval","clearInterval","useClaimInfo","claimInfoInterval","remainingTime","setRemainingTime","config","DeriEnv","get","useConfig","claim","parseInt","Date","now","mintDToken","period","dis","h","m","s","text","Liquidity","userInfoInPool","setUserInfoInPool","tradeSummary","setTradeSummary","loadUserInfoInPool","userInfo","getUserInfoInPool","userInfoPool","myTradingVolumeCurrent","volume1h","getTradeInfo","poolInfo","totalTradingVolumeCurrent","to","TradeMining","Object","defineProperty","exports","obj","_Modal","require","_Modal2","__esModule","default","module"],"mappings":"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","file":"static/js/4.52c2686c.chunk.js","sourcesContent":["import {useState,useRef} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [pending, setPending] = useState(false);\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  return(\n    <button className={className} onClick={onClick} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? 'PENDING' : btnText  }\n        </button>\n  )\n}","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 2,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen} = this.props\n      return (\n        <Modal isOpen={modalIsOpen} style={customizeStyle} appElement={appElement}>\n          <Component {...this.props} onClose={this.props.onClose}/>\n        </Modal>\n      )\n    }\n  }\n\n  return WithModal;\n}\nexport default withModal;","import React from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default class DeriNumberFormat extends React.Component {\n\n\n  format(val){    \n    //把非数字过滤\n    const trimed = val.replace(/\\W+/g,'')\n    if((+trimed === 0) ){\n      return '--';\n    } else {\n      return val;\n    }\n  }\n\n  render(){\n    const props = {\n      renderText : this.format,\n      displayType : 'text',\n      ...this.props\n    }\n    return(\n      <NumberFormat {...props} />\n    )\n  }\n}","import React, { useState, useEffect} from 'react'\nimport {\n\tgetLiquidityInfo,getPoolInfoApy,isUnlocked,unlock,getPoolLiquidity, getWalletBalance\n} from '../../../lib/web3js/index'\nimport AddLiquidity from './Dialog/AddLiquidity';\nimport RemoveLiquidity from './Dialog/RemoveLiquidity';\nimport Button from '../../Button/Button';\nimport { inject, observer } from 'mobx-react';\nimport withModal from '../../hoc/withModal';\nimport { eqInNumber } from '../../../utils/utils';\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat';\n\nfunction Liquidity({wallet,chainId,baseToken,address}) {\n  const [liquidity,setLiquidity] = useState({})\n\n\tconst loadLiquidityInfo = async () => {\n\t\tconst apyPool = await getPoolInfoApy(chainId,baseToken)\n\t\tif(wallet.isConnected() && eqInNumber(chainId , wallet.detail.chainId)){\n\t\t\tconst info = await getLiquidityInfo(chainId,address,wallet.detail.account);\n\t\t\tif(info){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal :  (+info.poolLiquidity),\n\t\t\t\t\tapy : (+apyPool.apy),\n\t\t\t\t\tshareValue : (+info.shareValue).toFixed(6),\n\t\t\t\t\tpercent : (((info.shares * info.shareValue) / info.poolLiquidity) * 100).toFixed(2) + '%',\n\t\t\t\t\tshares : (+info.shares).toFixed(2),\n\t\t\t\t\tvalues : (+info.shares * info.shareValue).toFixed(2)\n\t\t\t\t})\t\n\t\t\t}\n\t\t} else {\n\t\t\tconst info = await getPoolLiquidity(chainId,address);\n\t\t\tif(info){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal : (+info.liquidity),\n\t\t\t\t\tapy : (+apyPool.apy)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tloadLiquidityInfo();\n\t\treturn () => {}\n\t}, [wallet.detail.account])\n\n\n  return (\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Provide { baseToken } Earn DERI</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Pool Total Liquidity</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.total} suffix={ baseToken } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">APY</div>\n\t\t\t\t\t\t<div className=\"text-num\">{ liquidity.apy || '--' }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Liquidity Share Value</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.shareValue} suffix={ ' '+ baseToken } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">My Liquidity Pencentage</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.percent } /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Staked Balance </div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.shares  } decimalScale={2} /> <span>Shares</span> </div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd claim-network\">\n\t\t\t\t\t<div className=\"text-title money\"><DeriNumberFormat value={liquidity.values} suffix ={' '+ baseToken } decimalScale={2}/></div>\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title-check\">\n\t\t\t\t</div>\n\t\t\t\t <Operator wallet={wallet} chainId={chainId} address={address} baseToken={baseToken} loadLiquidity={loadLiquidityInfo}/>\n\t</div>\n  )\n}\n\n\nconst AddDialog = withModal(AddLiquidity)\nconst RemoveDialog = withModal(RemoveLiquidity)\n\n//操作区\nconst Operator = ({wallet,chainId,address,baseToken,loadLiquidity})=> {\n\tconst [isApproved,setIsApproved] = useState(false)\n\tconst [btnType, setBtnType] = useState('add')\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\n\tconst [balance, setBalance] = useState('');\n\tconst [liqInfo, setLiqInfo] = useState({})\n\t\n\tconst loadLiqidityInfo = async () => {\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\n      const info = await getLiquidityInfo(wallet.detail.chainId,address,wallet.detail.account);\t\n      setLiqInfo({shares : info.shares})\n    }\n  }\n\n\n  const loadBalance = async () => {\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\n      const total = await getWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\n      setBalance(total)\n    }\n  }\n\n  useEffect(() => {\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n    return () => {}\n  }, [wallet.detail.account])\n\n\n\tconst isApprove = async () => {\n\t\tconst result = await isUnlocked(chainId,address,wallet.detail.account) \n\t\tsetIsApproved(result);\n\t\treturn result;\n  }\n\n\tconst approve = async () => {\n\t\tconst res = await unlock(chainId,address,wallet.detail.account);\n\t\tif(res.success){\n\t\t\tsetIsApproved(true)\n\t\t}\n  }\n\n\n  const click = async () => {\n    if(wallet.isConnected()){\n      approve()\n    } else {\n\t\t\twallet.connect();\n    }\n\t}\n\t\n\tconst addLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('add')\n\t}\n\n\tconst afterClick = () => {\n\t\tsetIsOpen(false);\n\t\tloadLiquidity()\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n\t}\n\n\tconst removeLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('remove')\n\t}\n\n\n  \n  useEffect(() => {\n\t\t//todo 判断网络\n    if(wallet.isConnected()){\n\t\t\tif(eqInNumber(wallet.detail.chainId, chainId)){\n\t\t\t\tisApprove()\n\t\t\t} else {\n\t\t\t\tsetBtnText(<span className='red-color-font'>Wrong Network</span>)\n\t\t\t}\n    } else {\n      setBtnText('Collect Wallet')\n\t\t}\n\t\treturn () => {}\n\t}, [wallet.detail.account])\n\n\tuseEffect(() => {\n\t\tif(!isApproved){\n\t\t\tsetBtnText('APPROVE')\n\t\t}\n\t\treturn () => {};\n\t}, [isApproved]);\n\n  return (\n    <div className=\"liquidity-btn\">\n\t\t\t{\n\t\t\t\tbtnType === 'add' \n\t\t\t\t? <AddDialog  modalIsOpen={isOpen} onClose={afterClick} balance={balance} address={address} wallet={wallet} baseToken={baseToken} afterAdd={afterClick}/> \n\t\t\t\t: <RemoveDialog  modalIsOpen={isOpen} onClose={afterClick} liqInfo={liqInfo} address={address} wallet={wallet} baseToken={baseToken} afterRemove={afterClick}/>\n\t\t\t}\n\t\t\t{\n\t\t\tisApproved  \n\t\t\t? \n\t\t\t(<div className=\"add-remove-liquidity\">\n      <button \n          className=\"add-liquidity\"\n          onClick={addLiquidity}>\n          ADD LIQUIDITY\n      </button>\n      <button className=\"remove-liquidity\" onClick={removeLiquidity}>\n          REMOVE LIQUIDITY\n      </button>\n    </div>)\n\t\t:\n    (<div className=\"approve\" >\n\t\t\t<Button className='approve-btn' click={click} btnText={btnText}></Button>\n    </div>)\n\t\t}\n  </div>\n  )\n}\n\nexport default inject('wallet')(observer(Liquidity))","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport Button from '../../../Button/Button';\nimport Modal from 'react-modal'\nimport { addLiquidity, getWalletBalance } from '../../../../lib/web3js';\nimport useSpecification from '../../../../hooks/useSpecification';\n\n\n\nexport default function AddLiquidity({wallet,address,baseToken,onClose,afterAdd,balance}){\n  const [addValue, setAddValue] = useState('')\n  const spec = useSpecification({wallet,address});\n\n\n  const input = (e) => {\n    const {value} =e.target\n    setAddValue(value)\n  }\n\n  const addAll = () => {\n    setAddValue(balance);\n  }\n\n  const addLiq = async () => {\n    if((+addValue) > (+balance)) {\n      alert(\"not sufficient funds\");\n      return false;\n    }\n    if((+addValue) < (+spec.minAddLiquidity)) {\n      alert(`The input liquidity shall not be less than ${spec.minAddLiquidity}`);\n      return false;\n    }\n    const res = await addLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue)\n    if (!res.success) {\n      alert(\"failure of transaction\");\n    }\n    return true;\n  }\n\n\n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>ADD LIQUIDITY</div>\n            <div className='close' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>\n            <div className='margin-box-info'>\n              <div>Wallet Balance</div>\n              <div className='money'>\n                <span> \n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={balance } thousandSeparator={true} decimalScale={2}/>\n                  </span> \n                    <div className='base-token'>{ baseToken }</div> \n                  </span>\n                <span className='add'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : addValue ? 'block' : 'none'}}>LIQUIDITY</div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY'\n                      value={addValue}\n                      onChange={input}\n                    />\n                  </div>\n                </div>\n                <div>{ baseToken }</div>\n              </div>\n              <div className='max'>\n                MAX: <span className='max-num'>{balance }</span>\n                <span className='max-btn-left' onClick={addAll}>ADD ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button className='margin-btn' click={addLiq} btnText='ADD' afterClick={afterAdd}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { getSpecification } from \"../lib/web3js\";\n\nexport default function useSpecification({wallet,address}){\n  const [spec, setSpec] = useState({});\n\n  const getSpec = async () => {\n    if(wallet && wallet.account && address){\n      const spec =  await getSpecification(wallet.chainId,address,wallet.account);\n      setSpec(spec);\n    }\n  }\n\n  useEffect(() => {\n    getSpec();\n    return () => {\n      \n    }\n  }, []);\n\n  return spec;\n}","import React, { useState } from 'react'\nimport NumberFormat from 'react-number-format'\nimport { removeLiquidity } from '../../../../lib/web3js';\nimport Button from '../../../Button/Button';\n\nexport default function RemoveLiquidity({wallet,address,liqInfo,onClose,afterRemove}){  \n  const [amount, setAmount] = useState('');\n\n\n  const addAll = () => {\n    setAmount(liqInfo.shares)\n  }\n\n  const onChange = e => {\n    const {value} = e.target;\n    setAmount(value)\n  }\n\n  const remove = async () => {\n    if (liqInfo.shares < 1 && liqInfo.shares !== 0) {\n      alert('Leaving staking balance of smaller than 1 is not allowed. Please click \"MAX\" to remove all if you are to withdraw all of your liquidity.');\n      return false;\n    }\n    if ((+liqInfo.shares) < (+amount)) {\n      alert(`Your current max removable shares are  ${liqInfo.shares}`);\n      return false;\n    }\n    if (+amount <= 0 || isNaN(amount)) {\n      alert(\"Invalid Liquidity!\");\n      return false;\n    }\n    const res = await removeLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount);\n    if(!res.success){\n      alert(\"failure of transaction\");\n      return false; \n    }\n    return true;\n  }\n  \n  \n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>REMOVE LIQUIDITY</div>\n            <div className='close' data-dismiss='modal' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>          \n            <div className='margin-box-info'>\n              <div>Shares Available</div>\n              <div className='money'>\n                <span>\n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={liqInfo.shares} thousandSeparator={true} decimalScale={2}/>\n                    </span>\n                    </span>\n                <span className='remove'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : amount ? 'block' : 'none'}}>\n                      LIQUIDITY SHARES\n                    </div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY SHARES'\n                      value={amount}\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div>Shares</div>\n              </div>\n              <div className='max'>\n                MAX REMOVEABLE:\n                <span className='max-num'>{liqInfo.shares}</span>\n                <span className='max-btn-left' onClick={addAll}>REMOVE ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button click={remove} className='margin-btn' btnText='REMOVE' afterClick={afterRemove}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n      )\n}","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\n\nfunction LiquidityMining(props){\n  return (\n    <div className=\"liquidity-info\">\n      <Claim {...props}/>\n      <Liquidity {...props}/>\n  </div>)\n}\n\nexport default LiquidityMining","import { useState, useEffect} from 'react'\n\nimport useClaimInfo from \"../../hooks/useClaimInfo\";\nimport useConfig from \"../../hooks/useConfig\";\nimport { mintDToken } from \"../../lib/web3js\";\nimport Button from '../Button/Button';\n\nexport default function Claim({wallet}){\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\n\tconst [claimInfo,claimInfoInterval] = useClaimInfo(wallet);\n\tconst [remainingTime, setRemainingTime] = useState('')\n\tconst config = useConfig(claimInfo.chainId) \n\n  //claim deri\n\tconst claim = async () => {\n\t\tif (claimInfo.unclaimed === 0) {\n\t\t\talert('Sorry,no DERI to claim yet');\n\t\t\treturn;\n\t\t}\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\n\t\tif (now < 1800) {\n\t\t\talert('Claiming DERI is disabled during first 30 minutes of each epoch');\n\t\t\treturn;\n\t\t}\n\t\tconst res = await mintDToken(wallet.detail.chainId,wallet.detail.account)\n\t\tif(res.success){\n      clearInterval(claimInfoInterval);\n\t\t} else {\n\t\t\talert('Claim failed')\n\t\t}\n  }\n\n\tconst click = async () => {\n\t\tif(wallet.isConnected()){\n\t\t\tclaim();\n\t\t} \n\t}\n\n\n\t\n\t//初始化按钮文案和事件\n\tconst initButton = () => {\n\t\tif(wallet.isConnected()){\n\t\t\tsetBtnText('CLAIM')\n\t\t} else {\n\t\t\tsetBtnText('Collect Wallet')\n\t\t}\n\t}\n  \n  useEffect(() => {\n    //计数器\n    const interval = window.setInterval(() => {\n      let period = 3600 * 8;\n      let current = parseInt(Date.now()/1000);\n      let epochBegin = parseInt(current / period)*period;\n      let dis = (epochBegin + period - current);\n      let h = parseInt(dis / 3600);\n      let m = parseInt((dis % 3600)/60)\n      let s = parseInt(dis % 60) \n      setRemainingTime(`${h} h ${m} m ${s} s`);\n\t\t},1000);\n\n\t\tinitButton();\t\t\n    return () => {\n      clearInterval(interval);\n\t\t};\n\t\t\n  }, [wallet.detail.account]);\n\n\n  return (\n    <div className='claim-box'>\n\t\t\t\t<div className='odd title'>My Liquidity-Providing Harvest in Current Epoch</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Current Epoch Remaining Time</div>\n\t\t\t\t\t\t<div className='text-num'>{ remainingTime }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>My Harvest in Current Epoch (estimated)</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.harvestDeriLp } DERI</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Claimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.claimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Unclaimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.unclaimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd claim-network'>\n\t\t\t\t\t\t<div className='text-title'>Your DERI is on { config.text } . Connect to { config.text } to claim.</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='claim-btn'>\n\t\t\t\t\t<Button btnText={btnText} click={click} className='claim'/>\t\t\t\t\t\n\t\t\t\t</div>\n      </div>\n  ) \n}","import { useState, useEffect } from 'react'\nimport { getUserInfoAll ,deriToNatural} from '../lib/web3js';\n\n\nexport default function useClaimInfo(wallet){\n  const [claimInfo, setClaimInfo] = useState({});\n  let interval = null;\n\n  const loadClaimInfo =  async () => {\n    if(wallet.isConnected()){\n      const claimInfo  = await getUserInfoAll(wallet.detail.account);\n      const claimed = deriToNatural(claimInfo.total).toFixed(2);\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\n      const chainId = claimInfo.chainId\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade,chainId})\n    }\n  }\n\n  useEffect(() => {\n    interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\n      loadClaimInfo();\n    return () => clearInterval(interval);\n  }, [])\n  return [claimInfo,interval];\n}","import config from '../config.json'\nimport {DeriEnv} from '../lib/web3js/index'\nexport default function useConfig(chainId,type = 'chainInfo'){\n  return config[DeriEnv.get()][type][chainId] || {};\n}","import { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { getUserInfoAll,getUserInfoInPool ,getPoolInfoApy} from '../../../lib/web3js';\n\n\n\nexport default function Liquidity({wallet = {},chainId,address}) {\n  const [userInfoInPool,setUserInfoInPool] = useState({})\n  const [tradeSummary, setTradeSummary] = useState({});\n\n\tconst loadUserInfoInPool = async () => {\n\t\tconst userInfo = await getUserInfoAll(wallet.account);\n\t\tconst userInfoPool = await getUserInfoInPool(chainId,address,wallet.account);\n\t\tconst harvestDeriTrade = (+userInfo.trade).toFixed(2);\n\t\tconst myTradingVolumeCurrent = userInfoPool.volume1h\n\t\tsetUserInfoInPool({harvestDeriTrade,myTradingVolumeCurrent})\n\t}\n\n\tconst getTradeInfo = async () => {\n\t\tconst poolInfo = await getPoolInfoApy(chainId,address);\n\t\tconst totalTradingVolumeCurrent = poolInfo.volume1h\n\t\tsetTradeSummary({totalTradingVolumeCurrent})\n\t}\n\n\tuseEffect(() => {\n\t\tif(wallet && wallet.account){\n\t\t\tloadUserInfoInPool();\n\t\t\tgetTradeInfo();\n\t\t}\n\t\treturn () => {};\n\t}, []);\n\n  return(\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Trade to Earn DERI</div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">Total Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ tradeSummary.totalTradingVolumeCurrent || 0}</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">My Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ userInfoInPool.myTradingVolumeCurrent || 0 }</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd claim-network\">\n              \n        </div>\n        <div className=\"claim-btn\">\n            <Link to='/lite'>\n                <button className=\"claim\">\n                  TRADE\n                </button>\n              </Link>\n        </div>\n    </div> \n  )\n}","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\nexport default function TradeMining({wallet,...props}){\n  return(\n    <div className=\"trade-info\">\n      <Claim wallet={wallet}/>\n\t\t\t<Liquidity {...props}/>\n  </div>\n  )\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];"],"sourceRoot":""}