{"version":3,"sources":["components/Pool/PoolBox.js","hooks/useMiningPool.js","hooks/useSlpMiningPool.js","mobile/components/Mining/Pool.js"],"names":["PoolBox","pool","logoClassName","bTokenSymbol","history","useHistory","className","network","liquidity","apy","sushiApy","onClick","push","chainId","address","env","DeriEnv","get","chainInfo","config","useMiningPool","useState","loaded","setLoaded","pools","setPools","useEffect","configs","getContractAddressConfig","map","a","getPoolLiquidity","liqPool","getPoolInfoApy","apyPool","Object","assign","name","formatBalance","formatAddress","Promise","all","then","length","useSlpMiningPool","slpPools","setSlpPools","slpConfig","getSlpContractAddressConfig","getSlpPoolInfoApy","toFixed","deriapy","deriNatural","Pool","concat","index"],"mappings":"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","file":"static/js/8.51b9fbaf.chunk.js","sourcesContent":["import {useHistory} from 'react-router-dom'\n\nexport default function PoolBox({pool}){\n  const logoClassName = `logo ${pool.bTokenSymbol}`\n  const history = useHistory();\n  const mining = () => history.push(`/mining/${pool.chainId}/${pool.bTokenSymbol}/${pool.address}`)\n  \n  return(\n    <div className=\"pool\" >\n      <div className=\"pool-header\">\n        <div className=\"network\">\n          {pool.network}\n        </div>\n      </div>\n      <div className=\"pool-info\">\n        <div className=\"info-center\">\n          <div className=\"top-info\">\n            <div className={logoClassName} ></div>\n            <div className=\"pool-detail\">\n              <div className=\"base-token\">{pool.bTokenSymbol}</div>\n              <div>\n                <span>Pool Liq</span>\n                {pool.liquidity}\n              </div>\n              <div className=\"apy\">\n                <span>APY</span>\n                <span>\n                  <span>\n                  {pool.apy}\n                  </span>\n                  {pool.sushiApy &&<>\n                  <span>+</span>\n                  <span > {pool.sushiApy}</span>\n                  </>}\n                </span>\n                \n              </div>\n              <div className=\"pool-address\">\n                <span>Address</span>\n                {pool.pool}\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom-btn\">\n              <button onClick={mining}>\n                STAKING\n              </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import {useState,useEffect} from 'react';\nimport {\n  DeriEnv,\n  getContractAddressConfig,\n  getPoolLiquidity,\n  getPoolInfoApy,\n} from '../lib/web3js/index'\nimport config from '../config.json'\nimport { formatAddress, formatBalance } from '../utils/utils';\n\nconst env = DeriEnv.get();\nconst chainInfo = config[env]\n\nexport default function useMiningPool(){\n  const [loaded,setLoaded] = useState(false)\n  const [pools, setPools] = useState([])\n\n\n  useEffect(() => {\n    const configs = getContractAddressConfig(env).map(async config =>  {\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.bTokenSymbol) || {}\n      const pool = config.pool || ''\n      return Object.assign(config,{ \n        network : chainInfo[config.chainId].name,\n        liquidity : formatBalance(liqPool.liquidity),\n        apy : apyPool.apy,\n        pool : formatAddress(pool),\n        address : pool\n      })\n    })\n    Promise.all(configs).then(pools => {\n      setPools(pools);\n      setLoaded(true)\n    })\n    return () => pools.length = 0\n  })\n  return [loaded,pools];\n}","import {useState,useEffect} from 'react';\n\nimport {\n  getPoolLiquidity,\n  getSlpContractAddressConfig,\n  getSlpPoolInfoApy,\n  DeriEnv\n} from '../lib/web3js/index'\nimport { deriNatural} from '../utils/utils';\n\nconst env = DeriEnv.get();\n\nexport default function useSlpMiningPool(){\n  const [slpPools, setSlpPools] = useState([])\n\n  useEffect(() => {\n    const slpConfig = getSlpContractAddressConfig(env).map(async config => {\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool);\n      const apyPool = await getSlpPoolInfoApy(config.chainId,config.pool)\n      let sushiApy =  0.22008070161007/liqPool.liquidity;\n      sushiApy = (sushiApy * 100).toFixed(2) + \"%\";\n      let deriapy = deriNatural(apyPool.apy)\n      if (deriapy == \"0\") {\n        deriapy = \"--\";\n      } else {\n        deriapy = (deriapy * 100).toFixed(2) + \"%\";\n      }\n      return Object.assign(config,{\n        deriapy,\n        sushiApy,\n        bTokenSymbol : 'DERI-USDT SLP'\n      })\n    })\n    Promise.all(slpConfig).then(pools => {\n      setSlpPools(pools)\n    })\n    return () => {\n      slpPools.length = 0\n    }\n  },[])\n\n  return slpPools;\n}","import React from 'react'\nimport './pool.less'\nimport PoolBox from '../../../components/Pool/PoolBox';\nimport useMiningPool from '../../../hooks/useMiningPool';\nimport useSlpMiningPool from '../../../hooks/useSlpMiningPool';\n\n\nexport default function Pool(){\n\n  const [loaded,pools] = useMiningPool();\n  const slpPools = useSlpMiningPool()  \n  const all = pools.concat(slpPools)\n\n  return (\n    <div className=\"mining-info\">\n      <div className=\"pools\">\n        {all.map((pool,index) => <PoolBox pool={pool} key={index}/>)}\n        {!loaded && <div className=\"loading\">\n          <span\n            className=\"spinner spinner-border spinner-border-sm\">\n            </span>\n          </div>}  \n      </div>\n    </div>\n  )\n}"],"sourceRoot":""}