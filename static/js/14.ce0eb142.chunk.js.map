{"version":3,"sources":["desktop/pages/trade/Lite/Lite.js"],"names":["inject","observer","wallet","indexPrice","useState","curTab","setCurTab","spec","setSpec","specs","useDeriConfig","detail","switchTab","current","document","querySelector","style","minWidth","tradeBodyClass","classNames","useEffect","symbol","start","length","props","onSpecChange","pause","className","onClick"],"mappings":"4PAwEeA,sBAAO,SAAS,aAAhBA,CAA8BC,aA9D7C,YAAmC,IAApBC,EAAmB,EAAnBA,OAAOC,EAAY,EAAZA,WAAY,EACJC,mBAAS,QADL,mBACzBC,EADyB,KACjBC,EADiB,OAERF,mBAAS,IAFD,mBAEzBG,EAFyB,KAEnBC,EAFmB,KAG1BC,EAAQC,YAAcR,EAAOS,QAI7BC,EAAY,SAAAC,GAChBP,EAAUO,GAERC,SAASC,cAAc,YAAYC,MAAMC,SAD5B,QAAZJ,EACmD,SAEA,WASlDK,EAAgBC,IAAW,aAAcd,GAG/Ce,qBAAU,WAIR,OAHGb,EAAKc,QACNlB,EAAWmB,MAAMf,EAAKc,QAEjB,eAEN,CAACd,EAAKc,SAGTD,qBAAU,WAKR,OAJGX,EAAMc,OAAS,IAChBf,EAAQC,EAAM,IACdN,EAAWmB,MAAMb,EAAM,GAAGY,SAErB,eAGN,CAACZ,IAEJ,IAAMe,EAAQ,CACZtB,SACAO,QACAF,OACAkB,aA/BmB,SAAAlB,GACnBJ,EAAWuB,QACXlB,EAAQD,IA8BRJ,cAGF,OACE,sBAAKwB,UAAWT,EAAhB,UACE,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAOC,QAAS,kBAAMhB,EAAU,SAA/C,kBACA,qBAAKe,UAAU,MAAMC,QAAS,kBAAMhB,EAAU,QAA9C,qBAGU,SAAXP,EAAoB,cAAC,IAAD,eAAemB,IAAW,cAAC,UAAD,eAAcA","file":"static/js/14.ce0eb142.chunk.js","sourcesContent":["import { useState ,useEffect} from 'react'\nimport ProTrade from '../Pro/Pro';\nimport useDeriConfig from '../../../../hooks/useDeriConfig';\nimport classNames from 'classnames';\nimport {observer, inject } from 'mobx-react';\nimport './lite.less'\nimport LiteTrade from '../../../../components/Trade/LiteTrade';\n\n\n\nfunction Lite({wallet,indexPrice}){\n  const [curTab, setCurTab] = useState('lite')\n  const [spec, setSpec] = useState({});\n  const specs = useDeriConfig(wallet.detail)\n\n\n\n  const switchTab = current => {\n    setCurTab(current)\n    if(current === 'pro') {\n      document.querySelector('.desktop').style.minWidth = '1920px';\n    } else {\n      document.querySelector('.desktop').style.minWidth = 'inherit';\n    }\n  }\n\n  const onSpecChange = spec => {\n    indexPrice.pause();\n    setSpec(spec)\n  }\n\n  const tradeBodyClass =classNames('trade-body', curTab)\n\n\n  useEffect(() => {\n    if(spec.symbol){\n      indexPrice.start(spec.symbol)\n    }\n    return () => {\n    };\n  }, [spec.symbol]);\n\n\n  useEffect(() => {\n    if(specs.length > 0){\n      setSpec(specs[0]);   \n      indexPrice.start(specs[0].symbol)   \n    }\n    return () => {\n\n    };\n  }, [specs]);\n\n  const props = {\n    wallet,\n    specs,\n    spec ,\n    onSpecChange,\n    indexPrice\n  }\n\n  return (\n    <div className={tradeBodyClass}>\n      <div className=\"check-lite-pro\">\n        <div className='lite' onClick={() => switchTab('lite')}>LITE</div>\n        <div className='pro' onClick={() => switchTab('pro')}> PRO\n        </div>\n      </div>\n      {curTab === 'lite' ? <LiteTrade {...props}/> : <ProTrade {...props}/>}\n    </div>\n  )\n}\nexport default inject('wallet','indexPrice')(observer(Lite))"],"sourceRoot":""}