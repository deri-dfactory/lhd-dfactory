{"version":3,"sources":["utils/DeriNumberFormat.js","components/Button/Button.js","components/hoc/withModal.js","components/Mining/Liquidity/Liquidity.js","components/Mining/Liquidity/Dialog/AddLiquidity.js","hooks/useSpecification.js","components/Mining/Liquidity/Dialog/RemoveLiquidity.js","components/Mining/Liquidity/LiquidityMining.js","components/Claim/Claim.js","hooks/useClaimInfo.js","hooks/useConfig.js","components/Mining/Trade/Liquidity.js","components/Mining/Trade/TradeMining.js","../node_modules/react-modal/lib/index.js"],"names":["DeriNumberFormat","props","useState","renderablity","setRenderablity","useEffect","value","Math","abs","allowZero","displayType","Button","btnText","className","disabled","click","afterClick","status","setStatus","pending","setPending","loadRef","useRef","onClick","a","current","style","display","ref","marginRight","withModal","Component","appElement","document","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","overflow","state","modalIsOpen","this","isOpen","onClose","React","AddDialog","wallet","address","baseToken","afterAdd","balance","addValue","setAddValue","spec","setSpec","loadSpec","isConnected","getSpecification","detail","chainId","account","useSpecification","addLiq","alert","minAddLiquidity","addLiquidity","success","thousandSeparator","decimalScale","type","placeholder","onChange","e","target","RemoveDialog","liqInfo","afterRemove","amount","setAmount","remove","shares","isNaN","removeLiquidity","data-dismiss","Operator","loadLiquidity","isApproved","setIsApproved","btnType","setBtnType","setIsOpen","setBalance","setLiqInfo","buttonElment","setButtonElment","loadLiqidityInfo","eqInNumber","getLiquidityInfo","info","loadBalance","getWalletBalance","total","isApprove","isUnlocked","result","approve","unlock","res","error","message","connect","el","inject","observer","liquidity","setLiquidity","loadLiquidityInfo","getPoolInfoApy","apyPool","poolLiquidity","apy","shareValue","toFixed","percent","values","getPoolLiquidity","suffix","LiquidityMining","Claim","setBtnText","claimInfo","setClaimInfo","interval","loadClaimInfo","getUserInfoAll","claimed","deriToNatural","unclaimed","valid","harvestDeriLp","lp","harvestDeriTrade","trade","window","setInterval","clearInterval","useClaimInfo","claimInfoInterval","remainingTime","setRemainingTime","config","DeriEnv","get","useConfig","claim","parseInt","Date","now","mintDToken","period","dis","h","m","s","text","Liquidity","userInfoInPool","setUserInfoInPool","tradeSummary","setTradeSummary","loadUserInfoInPool","userInfo","getUserInfoInPool","userInfoPool","myTradingVolumeCurrent","volume1h","getTradeInfo","poolInfo","totalTradingVolumeCurrent","to","TradeMining","Object","defineProperty","exports","obj","_Modal","require","_Modal2","__esModule","default","module"],"mappings":"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","file":"static/js/4.f36c9e44.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    if((props.value || ((Math.abs(props.value)) === 0 && props.allowZero === true))) {\n      setRenderablity(<NumberFormat {...props} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import {useState,useRef} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [pending, setPending] = useState(false);\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  return(\n    <button className={className} onClick={onClick} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? 'PENDING' : btnText  }\n        </button>\n  )\n}","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 2,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen} = this.props\n      return (\n        <Modal isOpen={modalIsOpen} style={customizeStyle} appElement={appElement}>\n          <Component {...this.props} onClose={this.props.onClose}/>\n        </Modal>\n      )\n    }\n  }\n\n  return WithModal;\n}\nexport default withModal;","import React, { useState, useEffect} from 'react'\nimport {\n\tgetLiquidityInfo,getPoolInfoApy,isUnlocked,unlock,getPoolLiquidity, getWalletBalance\n} from '../../../lib/web3js/indexV2'\nimport AddLiquidity from './Dialog/AddLiquidity';\nimport RemoveLiquidity from './Dialog/RemoveLiquidity';\nimport Button from '../../Button/Button';\nimport { inject, observer } from 'mobx-react';\nimport withModal from '../../hoc/withModal';\nimport { eqInNumber } from '../../../utils/utils';\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat';\n\nfunction Liquidity({wallet,chainId,baseToken,address}) {\n  const [liquidity,setLiquidity] = useState({})\n\n\tconst loadLiquidityInfo = async () => {\n\t\tconst apyPool = await getPoolInfoApy(chainId,baseToken)\n\t\tif(wallet.isConnected() && eqInNumber(chainId , wallet.detail.chainId)){\n\t\t\tconst info = await getLiquidityInfo(chainId,address,wallet.detail.account);\n\t\t\tif(info){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal :  (+info.poolLiquidity),\n\t\t\t\t\tapy : (+apyPool.apy),\n\t\t\t\t\tshareValue : (+info.shareValue).toFixed(6),\n\t\t\t\t\tpercent : (((info.shares * info.shareValue) / info.poolLiquidity) * 100).toFixed(2) ,\n\t\t\t\t\tshares : (+info.shares).toFixed(2),\n\t\t\t\t\tvalues : (+info.shares * info.shareValue).toFixed(2)\n\t\t\t\t})\t\n\t\t\t}\n\t\t} else {\n\t\t\tconst info = await getPoolLiquidity(chainId,address);\n\t\t\tif(info){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal : (+info.liquidity),\n\t\t\t\t\tapy : (+apyPool.apy)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tloadLiquidityInfo();\n\t\treturn () => {}\n\t}, [wallet.detail.account])\n\n\n  return (\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Provide { baseToken } Earn DERI</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Pool Total Liquidity</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.total} suffix={ baseToken } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">APY</div>\n\t\t\t\t\t\t<div className=\"text-num\">{ liquidity.apy || '--' }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Liquidity Share Value</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.shareValue} suffix={ ' '+ baseToken } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">My Liquidity Pencentage</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.percent } suffix={'%'}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Staked Balance </div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat value={ liquidity.shares  } decimalScale={2} /> <span>Shares</span> </div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd claim-network\">\n\t\t\t\t\t<div className=\"text-title money\"><DeriNumberFormat value={liquidity.values} suffix ={' '+ baseToken } decimalScale={2}/></div>\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title-check\">\n\t\t\t\t</div>\n\t\t\t\t <Operator wallet={wallet} chainId={chainId} address={address} baseToken={baseToken} loadLiquidity={loadLiquidityInfo}/>\n\t</div>\n  )\n}\n\n\nconst AddDialog = withModal(AddLiquidity)\nconst RemoveDialog = withModal(RemoveLiquidity)\n\n//操作区\nconst Operator = ({wallet,chainId,address,baseToken,loadLiquidity})=> {\n\tconst [isApproved,setIsApproved] = useState(false)\n\tconst [btnType, setBtnType] = useState('add')\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst [balance, setBalance] = useState('');\n\tconst [liqInfo, setLiqInfo] = useState({})\n\tconst [buttonElment, setButtonElment] = useState(null);\n\t\n\tconst loadLiqidityInfo = async () => {\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\n      const info = await getLiquidityInfo(wallet.detail.chainId,address,wallet.detail.account);\t\n      setLiqInfo({shares : info.shares})\n    }\n  }\n\n\n  const loadBalance = async () => {\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\n\t\t\tconst total = await getWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\n\t\t\tif(typeof total !== 'object'){\n\t\t\t\tsetBalance(total)\t\t\t\t\n\t\t\t}\n    }\n  }\n\n  useEffect(() => {\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n    return () => {}\n  }, [wallet.detail.account])\n\n\n\tconst isApprove = async () => {\n\t\tconst result = await isUnlocked(chainId,address,wallet.detail.account) \n\t\tsetIsApproved(result);\n\t\treturn result;\n  }\n\n\tconst approve = async () => {\n\t\tconst res = await unlock(chainId,address,wallet.detail.account);\n\t\tif(res.success){\n\t\t\tsetIsApproved(true)\n\t\t} else {\n\t\t\talert(res.error ?  res.error.message || 'Approve failed' : 'Approve failed')\n\t\t}\n  }\n\n\n\tconst connect =  async () => {\n\t\tawait wallet.connect();\n\t}\n\t\n\tconst addLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('add')\n\t}\n\n\tconst afterClick = () => {\n\t\tsetIsOpen(false);\n\t\tloadLiquidity()\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n\t}\n\n\tconst removeLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('remove')\n\t}\n\n\n  \n  useEffect(() => {\n\t\t//todo 判断网络\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId, chainId)){\n\t\t\tisApprove()\n    }\n\t\treturn () => {}\n\t}, [wallet.detail.account])\n\n\tuseEffect(() => {\t\t\n\t\tif(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId) && isApproved){\n\t\t\tsetButtonElment((<div className=\"add-remove-liquidity\">\n\t\t\t<button \n\t\t\t\t\tclassName=\"add-liquidity\"\n\t\t\t\t\tonClick={addLiquidity}>\n\t\t\t\t\tADD LIQUIDITY\n\t\t\t</button>\n\t\t\t<button className=\"remove-liquidity\" onClick={removeLiquidity}>\n\t\t\t\t\tREMOVE LIQUIDITY\n\t\t\t</button>\n\t\t</div>))\n\t\t} else {\n\t\t\tlet el = null\n\t\t\tif(!wallet.isConnected()){\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={connect} btnText='Connect Wallet'></Button></div>\n\t\t\t} else if(!eqInNumber(wallet.detail.chainId,chainId)) {\n\t\t\t\tel = <div className=\"approve\" ><Button className='approve-btn wrong-network' btnText='Wrong Network'></Button></div>\t\t\t\t\n\t\t\t} else if(!isApproved) {\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={approve} btnText='APPROVE'></Button></div>\n\t\t\t} \n\t\t\tsetButtonElment(el)\n\t\t}\n\t\t\t\n\t\treturn () => {};\n\t}, [wallet.detail.account,isApproved]);\n\n  return (\n    <div className=\"liquidity-btn\">\n\t\t\t{\n\t\t\t\tbtnType === 'add' \n\t\t\t\t? <AddDialog  modalIsOpen={isOpen} onClose={afterClick} balance={balance} address={address} wallet={wallet} baseToken={baseToken} afterAdd={afterClick}/> \n\t\t\t\t: <RemoveDialog  modalIsOpen={isOpen} onClose={afterClick} liqInfo={liqInfo} address={address} wallet={wallet} baseToken={baseToken} afterRemove={afterClick}/>\n\t\t\t}\t\t\t\n\t\t\t{buttonElment}\n  </div>\n  )\n}\n\nexport default inject('wallet')(observer(Liquidity))","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport Button from '../../../Button/Button';\nimport Modal from 'react-modal'\nimport { addLiquidity, getWalletBalance } from '../../../../lib/web3js/indexV2';\nimport useSpecification from '../../../../hooks/useSpecification';\n\n\n\nexport default function AddLiquidity({wallet,address,baseToken,onClose,afterAdd,balance}){\n  const [addValue, setAddValue] = useState('')\n  const spec = useSpecification({wallet,address});\n\n\n  const input = (e) => {\n    const {value} =e.target\n    setAddValue(value)\n  }\n\n  const addAll = () => {\n    setAddValue(balance);\n  }\n\n  const addLiq = async () => {\n    if((+addValue) > (+balance)) {\n      alert(\"not sufficient funds\");\n      return false;\n    }\n    if((+addValue) < (+spec.minAddLiquidity)) {\n      alert(`The input liquidity shall not be less than ${spec.minAddLiquidity}`);\n      return false;\n    }\n    const res = await addLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue)\n    if (!res.success) {\n      alert(\"failure of transaction\");\n    }\n    return true;\n  }\n\n\n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>ADD LIQUIDITY</div>\n            <div className='close' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>\n            <div className='margin-box-info'>\n              <div>Wallet Balance</div>\n              <div className='money'>\n                <span> \n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={balance } thousandSeparator={true} decimalScale={2}/>\n                  </span> \n                    <div className='base-token'>{ baseToken }</div> \n                  </span>\n                <span className='add'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : addValue ? 'block' : 'none'}}>LIQUIDITY</div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY'\n                      value={addValue}\n                      onChange={input}\n                    />\n                  </div>\n                </div>\n                <div>{ baseToken }</div>\n              </div>\n              <div className='max'>\n                MAX: <span className='max-num'>{balance }</span>\n                <span className='max-btn-left' onClick={addAll}>ADD ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button className='margin-btn' click={addLiq} btnText='ADD' afterClick={afterAdd}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { getSpecification } from \"../lib/web3js/indexV2\";\n\nexport default function useSpecification({wallet,address}){\n  const [spec, setSpec] = useState({});\n\n  const loadSpec = async () => {\n    if(wallet.isConnected() && address){\n      const spec =  await getSpecification(wallet.detail.chainId,address,wallet.detail.account);\n      setSpec(spec);\n    }\n  }\n\n  useEffect(() => {\n    loadSpec();\n    return () => {      \n    }\n  }, wallet.detail.account,address);\n\n  return spec;\n}","import React, { useState } from 'react'\nimport NumberFormat from 'react-number-format'\nimport { removeLiquidity } from '../../../../lib/web3js/indexV2';\nimport Button from '../../../Button/Button';\n\nexport default function RemoveLiquidity({wallet,address,liqInfo,onClose,afterRemove}){  \n  const [amount, setAmount] = useState('');\n\n\n  const addAll = () => {\n    setAmount(liqInfo.shares)\n  }\n\n  const onChange = e => {\n    const {value} = e.target;\n    setAmount(value)\n  }\n\n  const remove = async () => {\n    if (liqInfo.shares < 1 && liqInfo.shares !== 0) {\n      alert('Leaving staking balance of smaller than 1 is not allowed. Please click \"MAX\" to remove all if you are to withdraw all of your liquidity.');\n      return false;\n    }\n    if ((+liqInfo.shares) < (+amount)) {\n      alert(`Your current max removable shares are  ${liqInfo.shares}`);\n      return false;\n    }\n    if (+amount <= 0 || isNaN(amount)) {\n      alert(\"Invalid Liquidity!\");\n      return false;\n    }\n    const res = await removeLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount);\n    if(!res.success){\n      alert(\"failure of transaction\");\n      return false; \n    }\n    return true;\n  }\n  \n  \n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>REMOVE LIQUIDITY</div>\n            <div className='close' data-dismiss='modal' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>          \n            <div className='margin-box-info'>\n              <div>Shares Available</div>\n              <div className='money'>\n                <span>\n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={liqInfo.shares} thousandSeparator={true} decimalScale={2}/>\n                    </span>\n                    </span>\n                <span className='remove'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : amount ? 'block' : 'none'}}>\n                      LIQUIDITY SHARES\n                    </div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY SHARES'\n                      value={amount}\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div>Shares</div>\n              </div>\n              <div className='max'>\n                <span>MAX REMOVEABLE:</span>\n                <span className='max-num'>{liqInfo.shares}</span>\n                <span className='max-btn-left' onClick={addAll}>REMOVE ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button click={remove} className='margin-btn' btnText='REMOVE' afterClick={afterRemove}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n      )\n}","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\n\nfunction LiquidityMining(props){\n  return (\n    <div className=\"liquidity-info\">\n      <Claim {...props}/>\n      <Liquidity {...props}/>\n  </div>)\n}\n\nexport default LiquidityMining","import { useState, useEffect} from 'react'\n\nimport useClaimInfo from \"../../hooks/useClaimInfo\";\nimport useConfig from \"../../hooks/useConfig\";\nimport { mintDToken } from \"../../lib/web3js/indexV2\";\nimport Button from '../Button/Button';\n\nexport default function Claim({wallet}){\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\n\tconst [claimInfo,claimInfoInterval] = useClaimInfo(wallet);\n\tconst [remainingTime, setRemainingTime] = useState('')\n\tconst config = useConfig(claimInfo.chainId) \n\n  //claim deri\n\tconst claim = async () => {\n\t\tif (claimInfo.unclaimed === 0) {\n\t\t\talert('Sorry,no DERI to claim yet');\n\t\t\treturn;\n\t\t}\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\n\t\tif (now < 1800) {\n\t\t\talert('Claiming DERI is disabled during first 30 minutes of each epoch');\n\t\t\treturn;\n\t\t}\n\t\tconst res = await mintDToken(wallet.detail.chainId,wallet.detail.account)\n\t\tif(res.success){\n      clearInterval(claimInfoInterval);\n\t\t} else {\n\t\t\talert('Claim failed')\n\t\t}\n  }\n\n\tconst click = async () => {\n\t\tif(wallet.isConnected()){\n\t\t\tclaim();\n\t\t} \n\t}\n\n\n\t\n\t//初始化按钮文案和事件\n\tconst initButton = () => {\n\t\tif(wallet.isConnected()){\n\t\t\tsetBtnText('CLAIM')\n\t\t} else {\n\t\t\tsetBtnText('Collect Wallet')\n\t\t}\n\t}\n  \n  useEffect(() => {\n    //计数器\n    const interval = window.setInterval(() => {\n      let period = 3600 * 8;\n      let current = parseInt(Date.now()/1000);\n      let epochBegin = parseInt(current / period)*period;\n      let dis = (epochBegin + period - current);\n      let h = parseInt(dis / 3600);\n      let m = parseInt((dis % 3600)/60)\n      let s = parseInt(dis % 60) \n      setRemainingTime(`${h} h ${m} m ${s} s`);\n\t\t},1000);\n\n\t\tinitButton();\t\t\n    return () => {\n      clearInterval(interval);\n\t\t};\n\t\t\n  }, [wallet.detail.account]);\n\n\n  return (\n    <div className='claim-box'>\n\t\t\t\t<div className='odd title'>My Liquidity-Providing Harvest in Current Epoch</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Current Epoch Remaining Time</div>\n\t\t\t\t\t\t<div className='text-num'>{ remainingTime }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>My Harvest in Current Epoch (estimated)</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.harvestDeriLp } DERI</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Claimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.claimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Unclaimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimInfo.unclaimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd claim-network'>\n\t\t\t\t\t\t<div className='text-title'>Your DERI is on { config.text } . Connect to { config.text } to claim.</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='claim-btn'>\n\t\t\t\t\t<Button btnText={btnText} click={click} className='claim'/>\t\t\t\t\t\n\t\t\t\t</div>\n      </div>\n  ) \n}","import { useState, useEffect } from 'react'\nimport { getUserInfoAll ,deriToNatural} from '../lib/web3js/indexV2';\n\n\nexport default function useClaimInfo(wallet){\n  const [claimInfo, setClaimInfo] = useState({});\n  let interval = null;\n\n  const loadClaimInfo =  async () => {\n    if(wallet.isConnected()){\n      const claimInfo  = await getUserInfoAll(wallet.detail.account);\n      const claimed = deriToNatural(claimInfo.total).toFixed(2);\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\n      const chainId = claimInfo.chainId\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade,chainId})\n    }\n  }\n\n  useEffect(() => {\n    interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\n      loadClaimInfo();\n    return () => clearInterval(interval);\n  }, [wallet.detail.account])\n  return [claimInfo,interval];\n}","import config from '../config.json'\nimport {DeriEnv} from '../lib/web3js/indexV2'\nexport default function useConfig(chainId,type = 'chainInfo'){\n  return config[DeriEnv.get()][type][chainId] || {};\n}","import { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { getUserInfoAll,getUserInfoInPool ,getPoolInfoApy} from '../../../lib/web3js/indexV2';\n\n\n\nexport default function Liquidity({wallet = {},chainId,address}) {\n  const [userInfoInPool,setUserInfoInPool] = useState({})\n  const [tradeSummary, setTradeSummary] = useState({});\n\n\tconst loadUserInfoInPool = async () => {\n\t\tconst userInfo = await getUserInfoAll(wallet.account);\n\t\tconst userInfoPool = await getUserInfoInPool(chainId,address,wallet.account);\n\t\tconst harvestDeriTrade = (+userInfo.trade).toFixed(2);\n\t\tconst myTradingVolumeCurrent = userInfoPool.volume1h\n\t\tsetUserInfoInPool({harvestDeriTrade,myTradingVolumeCurrent})\n\t}\n\n\tconst getTradeInfo = async () => {\n\t\tconst poolInfo = await getPoolInfoApy(chainId,address);\n\t\tconst totalTradingVolumeCurrent = poolInfo.volume1h\n\t\tsetTradeSummary({totalTradingVolumeCurrent})\n\t}\n\n\tuseEffect(() => {\n\t\tif(wallet && wallet.account){\n\t\t\tloadUserInfoInPool();\n\t\t\tgetTradeInfo();\n\t\t}\n\t\treturn () => {};\n\t}, []);\n\n  return(\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Trade to Earn DERI</div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">Total Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ tradeSummary.totalTradingVolumeCurrent || 0}</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">My Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ userInfoInPool.myTradingVolumeCurrent || 0 }</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd claim-network\">\n              \n        </div>\n        <div className=\"claim-btn\">\n            <Link to='/lite'>\n                <button className=\"claim\">\n                  TRADE\n                </button>\n              </Link>\n        </div>\n    </div> \n  )\n}","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\nexport default function TradeMining({wallet,...props}){\n  return(\n    <div className=\"trade-info\">\n      <Claim wallet={wallet}/>\n\t\t\t<Liquidity {...props}/>\n  </div>\n  )\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];"],"sourceRoot":""}